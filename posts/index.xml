<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Victor</title><link>https://vicfree.com/posts/</link><description>Recent content in Posts on Victor</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 18 Jan 2023 15:18:38 +0800</lastBuildDate><atom:link href="https://vicfree.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>TruenNAS 设置经验分享</title><link>https://vicfree.com/2023/01/truenas-setup-guide/</link><pubDate>Wed, 18 Jan 2023 15:18:38 +0800</pubDate><guid>https://vicfree.com/2023/01/truenas-setup-guide/</guid><description>白嫖王Linus 大骂 TrueNAS 设置不人性化（因为他从 UNRAID 切换到 TruenNAS 了），设置复杂且提示少。在它还叫作 FreeNAS 时，我是这么评价的：“反人类的UI，操作逻辑混乱”</description><content type="html"><![CDATA[<p>白嫖王Linus 大骂 TrueNAS 设置不人性化（因为他从 UNRAID 切换到 TruenNAS 了），设置复杂且提示少。在它还叫作 FreeNAS 时，我是这么评价的：“反人类的UI，操作逻辑混乱”。 所以那时我在用 NAS4Free(后来改名叫 XigmaNAS)，自从FreeNAS完善UI之后，并改名 TrueNAS，我也看到了很多 UI逻辑 的改进，我就开始转 TrueNAS 了，XigmaNAS 建立的 ZFS 存储池直接导入，无任何问题（我没问题，不代表你不会出现问题，越菜的人问题越多）。</p>
<p>目前 TrueNAS 还是有不少 BUG，但是几乎不影响你存储文件的安全，WEBUI 也改善了很多（虽然 TrueNAS 最近对存储池UI进行了大改，分开管理存储池和数据集，很多老外UP夸这个设计，但我觉得还需要继续改进，当前页面依然很复杂，应该默认隐藏一下当前没有使用的功能），但仍不适合纯小白。我对 WEBUI 好不好用评断标准就是 “以最少的鼠标点击次数，完成我的更改请求”。</p>
<p>所以我就写一个简单的配置向导，想深入，可以看我文章底部推荐的一些视频和文章。</p>
<h2 id="安装-truenas">安装 TrueNAS</h2>
<ul>
<li>
<p>下载ISO，Rufus DD模式写入U盘</p>
<ul>
<li>
<p>安装界面同时选择两个硬盘，会自动组 ZFS Mirror/镜像，坏一个启动盘也不影响NAS开机，小工作室推荐这么搞，个人就算了吧，一个新盘+备份文件+1小时就能恢复挂掉之前的状态。</p>
</li>
<li>
<p>现在 TrueNAS 推 root 账户去密码化，推荐选择admin继续安装，admin只能用来登录 WEBUI，root 是后台账号，所以登陆后新增一个自己名字的账号来 SMB 访问共享。</p>
</li>
<li>
<p>让自己的账号也能登录 WEBUI -&gt; 把自己的账号加入<code>builtin_administrators</code>组，顺便加入 <code>root apps docker</code> 组</p>
</li>
</ul>
</li>
</ul>
<h2 id="登录网页ui">登录网页UI</h2>
<ul>
<li>
<p>System Setting -&gt; General</p>
<ul>
<li>调时区语言（就那么几个字，还调语言？当前22.12版本好像简体中文不生效），备份设置在右上角。</li>
</ul>
</li>
<li>
<p>Network</p>
<ul>
<li>从 DHCP 调到固定 IP，记得 手动加一下 DNS + 网关，Global Configuration Settings - Nameserver + IPv4 Default Gateway</li>
</ul>
</li>
<li>
<p>Credentials -&gt; Local Users -&gt; Add</p>
<ul>
<li>添加新用户，只填带 * 用户名和密码部分 + 上面说到的几个组名字，其他不懂不要动，不懂就问。</li>
</ul>
</li>
<li>
<p>Storage -&gt; Create新建池 / Import导入池</p>
<ul>
<li>只要是ZFS都能跨设备导入，没有限制。你不懂怎么规划存储池结构，就点那个 <code>Suggest Layout</code>，你真的要研究怎么组存储池才安全，请你先去研究再来新建，因为存储池建好了，就不能资料无损的移除硬盘了。</li>
</ul>
</li>
<li>
<p>Datasets(数据集，类似磁盘分区)</p>
<ul>
<li>
<p>可新建多个dataset，每个dataset用不同的 Record Size，提升某些程序响应。但大家都是片子，直接1M起步吧。dataset下面可以继续建dataset，一直套娃下去，虽然 SMB 分享之后 dataset 显示为文件夹，但是他是相当于系统分区，每个分区配置都可以不一样，分区之前移动文件也是完整复制+删除，不会瞬间移动文件完成。</p>
</li>
<li>
<p>LZ4 压缩保持默认开启，假如都是片子 没啥压缩效果，但是假如你保存了一下压缩率低的文件，系统会以极低CPU消耗帮你节省你的磁盘文件体积占用，除非特殊高大上应用有要求，不要关LZ4压缩。</p>
</li>
<li>
<p>Atime，默认推荐关闭，文件访问时间记录，用极大的磁盘带宽消耗来记录你打开片子的访问时间，你不想关，随便你，SMB速度减半不要哭。</p>
</li>
<li>
<p>Record Size -&gt; 片子直接1M起，你存储文件体积越大，就选越大。小文件就往小了选，随便改，改了之后写入的文件才会以这个大小存储，之前的文件的Record Size还是不变。</p>
</li>
<li>
<p>ACL 推荐 SMB/NFSv4，权限修改和Windows NTFS权限一样，一条一条的加权限。</p>
</li>
<li>
<p>以上除了我写到的，其他的设置就别乱改了，改了你的 NAS 就会爆炸。</p>
</li>
</ul>
</li>
<li>
<p>Shares -&gt; SMB -&gt; Add</p>
<ul>
<li>
<p>Path -&gt; /mnt(挂载点) / pool(存储池) / dataset(数据分区)。推荐只分享 dataset，不分享存储池，因为不这么做，TrueNAS报错会多到自己看不懂，其他人也不一定看得懂。</p>
</li>
<li>
<p>分享名随便设置，其他全部默认设置，保存后会启动SMB服务，勾选SMB自启。</p>
</li>
</ul>
</li>
<li>
<p>Data Protection</p>
<ul>
<li>
<p>Scrub Tasks 会自动把你的存储池加进去，每个月校验修复你的存储池文件损坏，别乱动默认设置。</p>
</li>
<li>
<p>Periodic Snapshot Tasks 定期快照，需要对全部 dataset 进行快照，节省时间的方法可以选 存储池+Recursive递归，把你存储池下面所有dataset进行快照。快照保存时间，快照可选每天每小时每分钟进行。</p>
</li>
<li>
<p>TrueNAS 的快照功能集成到了 Windows VSS/卷影复制服务功能上，你的每个快照都可以在 Windows Explorer 的<code>右键-属性-以前的版本</code>中看到，而且能够即时的浏览文件历史版本，没有恢复等待时间。</p>
</li>
<li>
<p>Replication Tasks，dataset数据集可以备份到另一个存储池或者另一台TrueNAS Core/Scale，备份使用的是快照发送，所以请使用高级模式进行配置，不然会重复新建备份快照（重复快照任务不影响文件安全，但是我就是看着不舒服）</p>
</li>
<li>
<p>S.M.A.R.T. Tests，新建所有硬盘 每天 short 每周 long 的SMART检查，防患于未然。</p>
</li>
</ul>
</li>
<li>
<p>Apps</p>
<ul>
<li>
<p>选择存储 Docker 文件的存储池，会自动新建一个  ix-applications 的 dataset。存储可以选一个单盘SSD，然后每分钟或每小时备份到机械硬盘RAID阵列上。</p>
</li>
<li>
<p>Setting -&gt; Advanced Setting -&gt; 取消勾选 Enable Host Path Safety Checks，企业级隔离功能，我们全都是片子，不怕不安全。</p>
</li>
<li>
<p>不要使用 Truecharts 软件库，手动使用 Launch Docker Image 新增 docker, 这样能保证对你的数据最大的控制权。使用自带 TrueNAS软件库 或者 TrueChart软件库，轻则更新不及时，重则完全不启动。TrueNAS K3S 复杂程度超出你的想象。</p>
</li>
<li>
<p>顺便说一下 Docker 版 BT 下载工具端口映射问题，Docker BT 软件是无法将端口映射到你的路由器 upnp上的，比如 qBit 开放的 Peer TCP/UDP 端口是 6881，TrueNAS 软件库将 Docker 端口6881 转发到了 TrueNAS 端口20988，这时候你需要手动将路由器 WAN口 端口6881 转发到 TrueNAS LAN 端口20988 上。这样做是为了保证 qBit 网页设置的端口和你实际 WAN 口开放的一致，如果不一致会导致 BT 下载速度慢，也就是端口映射失败的情况。所以我的做法是，不使用官方软件库，手动设置 qBit 端口为 46881，端口转发全部填46881。</p>
</li>
</ul>
</li>
</ul>
<h2 id="nfsv4-acl">NFSv4 ACL</h2>
<ul>
<li>
<p>跟着UI自己设置吧，一条一条加，灵活性高，和 NTFS 的逻辑一模一样，不需要理解UGO/0755这种逻辑。</p>
</li>
<li>
<p>什么你还想了解这个 ACL？ 放一个<a href="https://www.bilibili.com/video/BV1tG4y1C78v/">B站-老湿基-视频BV1tG4y1C78v</a>，和<a href="https://www.truenas.com/docs/scale/scaleuireference/storage/datasets/editaclscreens/#permissions-settings---advanced">TruenNAS 官方手册</a>自己去看吧。</p>
</li>
</ul>
<h2 id="openzfs-其他相关资料">OpenZFS 其他相关资料</h2>
<ul>
<li>
<p>ZFS 推荐你使用 ECC，并不是ZFS没有ECC就不能用了，我现在强烈推荐你把下面资料全部看一遍，你会听吗？</p>
</li>
<li>
<p>ZFS 的特色是速度慢，不是速度快，他的优点是：提供了偏执狂般文件安全，干的活多，自然速度慢。</p>
</li>
<li>
<p>为什么没人用硬件Raid了，因为企业级机械硬盘都没有 520byte 扇区了，家用是 512byte 扇区，企业级多了 8byte 的校验，Raid卡会使用 8Byte 来校验文件正确性。所以说目前不管是软硬RAID，都没有任何应对硬盘比特位翻转的对策。</p>
</li>
</ul>
<h3 id="没有ecc内存时比特位翻转会发生什么">没有ECC内存时比特位翻转会发生什么</h3>
<ul>
<li>
<p>这种情况下位翻转不会有任何影响。</p>
<ul>
<li>位翻转发生在未使用的内存中。</li>
</ul>
</li>
<li>
<p>位翻转导致 runtime 故障。</p>
<ul>
<li>
<p>当从磁盘读取的内容时发生位翻转。</p>
</li>
<li>
<p>当程序更改代码时，通常会观察到故障。</p>
</li>
<li>
<p>如果位翻转发生在系统内核或 /sbin/init 中的例程中，系统可能会崩溃。重新加载受影响的数据可以清除故障。也可以通过重新启动来解决。</p>
</li>
</ul>
</li>
<li>
<p>位翻转发生在下列情况下可能会导致数据损坏。</p>
<ul>
<li>
<p>当文件使用到的内存比特位正准备写入到磁盘时发生位翻转。</p>
</li>
<li>
<p>位翻转发生在 ZFS 的校验和计算之前，ZFS 将不会意识到数据已损坏。</p>
</li>
<li>
<p>位翻转发生在 ZFS 的校验和计算之后，但在写入磁盘之前，ZFS 会检测到它，但它可能无法纠正它。</p>
</li>
</ul>
</li>
<li>
<p>位翻转发生在下列情况下可能导致元数据损坏。</p>
<ul>
<li>
<p>当写入磁盘时盘面结构发生位翻转。</p>
</li>
<li>
<p>位翻转发生在 ZFS 的校验和计算之前，ZFS 将不会意识到元数据已损坏。</p>
</li>
<li>
<p>位翻转发生在 ZFS 的校验和计算之后，但在写入磁盘之前，ZFS 会检测到它，但它可能无法纠正它。</p>
</li>
<li>
<p>以上此类事件中能否恢复将取决于损坏的内容。 在最坏的情况下，存储池可能变得不可导入。此时所有文件系统在绝对最坏的情况下，位翻转故障情况后的数据可靠性会很差。但这种情况应该被认为是非常罕见的。</p>
</li>
</ul>
</li>
</ul>
<p>以下是转-老湿基-</p>
<ul>
<li>
<p>传统的RAID在恢复时，存在一些问题。假如4个10T的盘做了RAID5，其中某个盘坏了，系统重建RAID时会重建10T空间。哪怕实际仅用了2T，空闲的8T也会被傻瓜式校验一遍，因为这是个很低级的过程。在ZFS上，因为文件系统知道RAID模式，所以可以按需重建，只需要恢复2T的数据即可。</p>
</li>
<li>
<p>但需要注意，恢复阵列依旧是个脆弱的过程！ZFS也不例外。ZFS只是降低了任务难度，客观来看ZFS的恢复也挺严峻。</p>
</li>
<li>
<p>强烈不建议把问题硬盘直接拔下来再插入新盘，因为这种情况下新盘的数据就必须通过全盘读取其他好盘的方式计算出来，这个过程的代价比较高。而如果带着故障硬盘一起恢复，那么故障硬盘里的好数据就能直接导入新盘，而无需根据其他盘的校验值进行反向计算，这大大降低了其他盘在高强度读数据过程中发生损坏的风险。</p>
</li>
</ul>
<p>ZFS 视频1 <a href="https://www.bilibili.com/video/BV18V4y1K7o2/">https://www.bilibili.com/video/BV18V4y1K7o2/</a></p>
<p>ZFS 文字版1 <a href="https://www.wolai.com/littlenewton/gJvungs54zWgZ3YfoXAvKW">https://www.wolai.com/littlenewton/gJvungs54zWgZ3YfoXAvKW</a></p>
<p>ZFS 视频2 <a href="https://www.bilibili.com/video/BV1Ad4y1Y7b5/">https://www.bilibili.com/video/BV1Ad4y1Y7b5/</a></p>
<p>ZFS 文字版2 <a href="https://www.wolai.com/littlenewton/dT2737LXf412LKKZ973DsD">https://www.wolai.com/littlenewton/dT2737LXf412LKKZ973DsD</a></p>
<p>OpenZFS 基础 <a href="https://www.youtube.com/watch?v=MsY-BafQgj4">https://www.youtube.com/watch?v=MsY-BafQgj4</a></p>
<p>如何扩展ZFS <a href="https://www.youtube.com/watch?v=11bWnvCwTOU">https://www.youtube.com/watch?v=11bWnvCwTOU</a></p>
<p>硬件Raid已死 <a href="https://www.youtube.com/watch?v=11bWnvCwTOU">https://www.youtube.com/watch?v=11bWnvCwTOU</a></p>
<p>OpenZFS 硬件推荐 <a href="https://openzfs.github.io/openzfs-docs/erformance%20and%20Tuning/Hardware.html">https://openzfs.github.io/openzfs-docs/erformance%20and%20Tuning/Hardware.html</a></p>
<p>Debian ZFS 命令行使用教程 <a href="https://pthree.org/2012/04/17/install-zfs-on-debian-gnulinux/">https://pthree.org/2012/04/17/install-zfs-on-debian-gnulinux/</a></p>
]]></content></item><item><title>如何正确配置 OpenWrt WPA3 + 802.11kvr</title><link>https://vicfree.com/2022/11/openwrt-wpa3-802.11kvr-ap-setup/</link><pubDate>Thu, 24 Nov 2022 11:50:38 +0800</pubDate><guid>https://vicfree.com/2022/11/openwrt-wpa3-802.11kvr-ap-setup/</guid><description>在优化家里Wi-Fi过程中，发现不管是中文英文，无线漫游、802.11kvr相关的视频帖子要么是简单的复制粘贴，要么夹杂在大量无效信息内，所</description><content type="html"><![CDATA[<p>在优化家里Wi-Fi过程中，发现不管是中文英文，无线漫游、802.11kvr相关的视频帖子要么是简单的复制粘贴，要么夹杂在大量无效信息内，所以今天给大家总结一下我学到的东西。</p>
<p>很多Android手机不支持漫游，想退出，还来得及。</p>
<h2 id="准备工作">准备工作</h2>
<ol>
<li>
<p>安装支持 wps3 802.11kvr mesh 的 package<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<blockquote>
<p>官方<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>只说了请安装完整版本 hostapd or wpad，你是装 hostapd 完整版还是 wpad 完整版。并且你猜哪个版本是完整版？ wpad? wpad-wolfssl? wpad-openssl? wpad-mesh-wolfssl?</p>
</blockquote>
<blockquote>
<p>解释：这些包的<a href="https://github.com/openwrt/openwrt/blob/master/package/network/services/hostapd/Makefile">源码</a>都是一样的只是包含的组件不一样，推荐不要动 hostapd，只升级 wpad。推荐使用 wpad-wolfssl <a href="https://github.com/openwrt/openwrt/commit/49cc712b44c76e99bfb716c06700817692975e05">因为它包含 wpa3+mesh+802.11r 最完整也最小体积</a>。</p>
</blockquote>
</li>
<li>
<p>回想一下你目前网络架构，你都准备用无线 802.11kvr 漫游了，说明你有多个AP，那你的 AP 开启 AP 模式了吗？</p>
<blockquote>
<p><a href="https://openwrt.org/zh/docs/guide-user/network/wifi/dumbap#%E4%BD%BF%E7%94%A8openwrt%E7%9A%84web%E7%95%8C%E9%9D%A2luci%E8%BF%9B%E8%A1%8C%E9%85%8D%E7%BD%AE">你先看这个中文教程开启AP模式再说吧</a>，简单来说就是：改LAN IP -&gt; 关 LAN DHCP -&gt; 禁用 firewall, dnsmasq and odhcpd 服务.</p>
</blockquote>
<blockquote>
<p>因为 AP 不参加 DHCP，已连接设备列表只能看到mac+ip， 官方给了方法：手动把主路由 DHCP 记录导出到 AP 的 /etc/ethers 文件中。DHCP设备清单导出命令是：<code>cat /tmp/dhcp.leases | awk '{print $2&quot; &quot;$4}'</code></p>
</blockquote>
<blockquote>
<p>已禁用的 firewall, dnsmasq, odhcpd 服务会在升级固件后重新启用，可以把这个脚步添加到 系统-&gt;启动-&gt;本地启动脚本（看提示，不要粘贴到最后一行）。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl"># these services do not run on dumb APs
</span></span><span class="line"><span class="cl"><span class="k">for</span> i in firewall dnsmasq odhcpd; do
</span></span><span class="line"><span class="cl">  if /etc/init.d/<span class="s2">&#34;$i&#34;</span> enabled; then
</span></span><span class="line"><span class="cl">    /etc/init.d/<span class="s2">&#34;$i&#34;</span> disable
</span></span><span class="line"><span class="cl">    /etc/init.d/<span class="s2">&#34;$i&#34;</span> stop
</span></span><span class="line"><span class="cl">  fi
</span></span><span class="line"><span class="cl">done
</span></span></code></pre></div></li>
<li>
<p>顺便说一下这个 Dumb AP 页面<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>，网页最底下有个<code>option igmp_snooping '1'</code> 这个igmp指的是IPTV，DLNA 组播流，如果你的交换机不支持这个 snooping，组播流会淹没你的Wi-Fi，每时每刻都在给你的 Wi-Fi 推组播流，降低你的无线性能。snooping 开启后，只有在有人用到组播流的时候，才会推组播流，其它时候会被OpenWrt交换机或独立交换机掐掉组播流。</p>
</li>
</ol>
<h2 id="开始配置">开始配置</h2>
<p>写的越来越多了，直接开启吧～</p>
<h3 id="tldrssh进路由运行下面脚本">TLDR：SSH进路由运行下面脚本</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">uci set wireless.default_radio0.ieee80211k=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.wnm_sleep_mode=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.bss_transition=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.ieee80211r=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.mobility_domain=8888
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.ft_over_ds=0
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.ft_psk_generate_local=0
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ieee80211k=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.wnm_sleep_mode=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.bss_transition=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ieee80211r=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.mobility_domain=8888
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ft_over_ds=0
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ft_psk_generate_local=0
</span></span><span class="line"><span class="cl">uci commit wireless
</span></span><span class="line"><span class="cl">wifi reload
</span></span></code></pre></div><p>上面的命令会将下面的参数会写到 <code>/etc/config/wireless</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">option ieee80211k &#39;1&#39;
</span></span><span class="line"><span class="cl">option wnm_sleep_mode &#39;1&#39;
</span></span><span class="line"><span class="cl">option bss_transition &#39;1&#39;
</span></span><span class="line"><span class="cl">option ieee80211r &#39;1&#39;
</span></span><span class="line"><span class="cl">option mobility_domain &#39;8888&#39;
</span></span><span class="line"><span class="cl">option ft_over_ds &#39;0&#39;
</span></span><span class="line"><span class="cl">option ft_psk_generate_local &#39;0&#39;
</span></span></code></pre></div><p>如果上面参数已经被你改坏掉了，可以删除 <code>/etc/config/wireless</code>，使用 <code>wifi config</code> 重新生成配置。</p>
<ol>
<li>
<p><a href="https://openwrt.org/docs/guide-user/network/wifi/basic#neighbor_reports_options_80211k">802.11k</a>, 官方 OpenWrt Luci没有此项设置，需手动添加<code>option ieee80211k '1'</code>来开启。国内很多 OpenWrt 是有luci配置选项的。</p>
</li>
<li>
<p><a href="https://openwrt.org/docs/guide-user/network/wifi/basic#bss_transition_management_frames_options_80211v">802.11v</a>, 同上。</p>
<blockquote>
<p><code>option ieee80211v '1'</code> 是多余的设置已被<a href="https://github.com/openwrt/openwrt/commit/b518f07d4b8ae144453c606c9ec4ecef7d39f968">弃用</a></p>
</blockquote>
<blockquote>
<p><code>wnm_sleep_mode</code> WiFi 客户端待机睡眠模式</p>
</blockquote>
<blockquote>
<p><code>bss_transition</code> AP 会发生指令给 WiFi 客户端，推荐最佳信号的 AP 供链接，但是客户端连不连，AP 就管不到了。</p>
</blockquote>
<blockquote>
<p><code>time_advertisement</code> 广播同步时间，好像就是字面意思，无线数据包中包含时区信息，我也不清楚，<a href="https://www.mail-archive.com/openwrt-devel@lists.openwrt.org/msg60773.html">OpenWrt邮件</a>是这么说的，我觉得没啥用，不启用了。</p>
</blockquote>
</li>
<li>
<p><a href="https://openwrt.org/docs/guide-user/network/wifi/basic#fast_bss_transition_options_80211r">802.11r</a>, 这个设置官方OpenWrt 已经集成到Luci网页里了。</p>
</li>
</ol>
<blockquote>
<p>重要：开了802.11r，部分设备会不兼容 WPA3 或者 WPA3-mixed，可能和系统版本无关，也可能无关，没有太多的数据，没办法找出规律，可以参考<a href="https://github.com/openwrt/openwrt/issues/7858">官方OpenWrt issue</a>。</p>
</blockquote>
<ul>
<li>
<p>进入WEBUI，按照下面进行修改</p>
<ul>
<li>802.11r <code>打勾</code></li>
<li>NAS ID <code>不填</code></li>
<li>移动域/Mobility Domain <code>可以不填</code></li>
<li>重关联截止时间/Reassociation Deadline 填<code>20000</code></li>
<li>FT protocol/FT 协议 选<code>FT over the Air</code></li>
<li>本地生成 PMK/Generate PMK locally <code>取消勾</code></li>
<li>剩下所有参数全部默认不修改。</li>
</ul>
<blockquote>
<p>WPA3 必须<code>取消勾</code> 本地生成 PMK/Generate PMK locally，<a href="https://forum.openwrt.org/t/wpa3-with-802-11r-ft-sae-not-working/103583/6">用户问了hostapd的人</a>，必须 <code>option ft_psk_generate_local '0'</code></p>
</blockquote>
<blockquote>
<p>iOS 用户必须将 FT 改为 <a href="https://github.com/openwrt/openwrt/issues/7907">FT over the Air</a>，<code>option ft_over_ds '0'</code>, 这个参数是从Cisco那边抄过来的，链接里还提到了<code>option reassociation_deadline '20000'</code> <code>option max_inactivity '60'</code> 可以试试加了有没有(副)效果。</p>
</blockquote>
<blockquote>
<p>iOS 提示 <code>hostapd: nl80211: kernel reports: key addition failed</code> 这个错误，<a href="https://forum.openwrt.org/t/802-11r-fast-transition-how-to-understand-that-ft-works/110920/61">OpenWrt开发者提到目前在TODO流程中</a></p>
</blockquote>
<blockquote>
<p>NAS ID 为啥不填，<a href="https://openwrt.org/docs/guide-user/network/wifi/basic#fast_bss_transition_options_80211r">OpenWrt Guide要求填</a>，<a href="https://forum.openwrt.org/t/802-11r-fast-transition-how-to-understand-that-ft-works/110920/77">开发者说不填，OpenWrt会用mac代替</a>，因为开发者改代码速度比官方Guide快而已，开发者在论坛回帖子，回复时想起来有个bug，<a href="https://github.com/openwrt/openwrt/commit/e6df13d0e16dd394ca26a80feeb013234948e875">立马提patch</a>。</p>
</blockquote>
<blockquote>
<p>OpenWrt 开发者给出了<a href="https://forum.openwrt.org/t/802-11r-fast-transition-how-to-understand-that-ft-works/110920/83">他的参数</a>，供参考。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">config wifi-iface &#39;Xxx_radio1&#39;
</span></span><span class="line"><span class="cl">        option device &#39;radio1&#39;
</span></span><span class="line"><span class="cl">        option network &#39;lan&#39;
</span></span><span class="line"><span class="cl">        option mode &#39;ap&#39;
</span></span><span class="line"><span class="cl">        option ssid &#39;Xxx&#39;
</span></span><span class="line"><span class="cl">        option encryption &#39;sae&#39;
</span></span><span class="line"><span class="cl">        option key &#39;***&#39;
</span></span><span class="line"><span class="cl">        option ieee80211w &#39;2&#39;
</span></span><span class="line"><span class="cl">        option ieee80211r &#39;1&#39;
</span></span><span class="line"><span class="cl">        option ft_psk_generate_local &#39;0&#39;
</span></span><span class="line"><span class="cl">        option ft_over_ds &#39;0&#39;
</span></span><span class="line"><span class="cl">        option ieee80211k &#39;1&#39;
</span></span><span class="line"><span class="cl">        option bss_transition &#39;1&#39;
</span></span><span class="line"><span class="cl">        option ieee80211v &#39;1&#39;
</span></span><span class="line"><span class="cl">        option disassoc_low_ack &#39;0&#39;
</span></span></code></pre></div></li>
</ul>
<h2 id="测试能否成功漫游">测试能否成功漫游</h2>
<p>一般来说拿个iPhone，在两个AP直接来回晃悠就行了。
晃悠完了，来到 AP 看日志。</p>
<ol>
<li>
<p>第一次连接AP，会出现 <code>EAPOL-4WAY-HS-COMPLETED</code></p>
</li>
<li>
<p>漫游成功会出现 <code>AP-STA-CONNECTED</code></p>
<blockquote>
<p>老版本 OpenWrt 可能没有这个提示，需要手动调整 <code>option log_level '1'</code></p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">uci set wireless.radio0.log_level=1
</span></span><span class="line"><span class="cl">uci set wireless.radio1.log_level=1
</span></span><span class="line"><span class="cl">uci commit wireless
</span></span><span class="line"><span class="cl">wifi reload
</span></span></code></pre></div><blockquote>
<p>这个提示说明漫游成功 <code>WPA: FT authentication already completed - do not start 4-way handshake</code></p>
</blockquote>
</li>
</ol>
<h2 id="经验">经验</h2>
<blockquote>
<p>Wi-Fi 配置文件在 <code>/etc/config/wireless</code></p>
</blockquote>
<blockquote>
<p>Wi-Fi 运行配置在 <code>/var/run/hostapd-phy0.conf</code> <code>/var/run/hostapd-phy1.conf</code></p>
</blockquote>
<p>所有有关Wi-Fi的配置基本都在这里，很多自动生成的配置不保存在wireless里，只存在hosapd conf里。</p>
<p>很多 OpenWrt 参数可能会改变，修改前记得查源码<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>，查手册<sup id="fnref1:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>，查官方论坛<sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup></p>
<h2 id="手机-wi-fi-网络工具app">手机 Wi-Fi 网络工具APP</h2>
<p>因为APP重名比较多，直接写包名+显示名
Android:</p>
<p><code>com.ubnt.usurvey</code> WiFiman, 最好看，好用。</p>
<p><code>net.techet.netanalyzerlite.an</code> Network Analyzer, 一般好用，功能多一点。</p>
<p><code>com.vrem.wifianalyzer</code> WiFi Analyzer (open-source), 扫描Wi-Fi的信息，可以看有没有开FT(漫游)。</p>
<p>iPhone:</p>
<p><code>com.dayananetworks.networkutilities </code>Network Utilities &amp; Analyzer 功能足够多，但是因为 iPhone 不显示本地设备mac，聊胜于无。</p>
<p>还有一个工具，不好看，但功能最多。</p>
<p><code>net.he.NetworkUtility</code> or <code>net.he.networktools</code> HE.NET Network Tools</p>
<h2 id="bonus-openwrt一键ap命令">BONUS: OpenWrt一键AP命令</h2>
<blockquote>
<p>懂自己在做什么的，可以一键复制粘贴，不懂的，请一行一行复制粘贴。</p>
</blockquote>
<p>打开SSH，路由先联网，设置路由时间。
安装wpad-wolfssl软件包</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">opkg update
</span></span><span class="line"><span class="cl">opkg remove wpad-mini
</span></span><span class="line"><span class="cl">opkg remove wpad-basic
</span></span><span class="line"><span class="cl">opkg remove wpad-basic-wolfssl
</span></span><span class="line"><span class="cl">opkg install wpad-wolfssl
</span></span></code></pre></div><p>自定义下面脚本，IP地址、Wi-Fi密码等</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">uci set dhcp.lan.ignore=1
</span></span><span class="line"><span class="cl">uci set dhcp.lan.dhcpv6=disabled
</span></span><span class="line"><span class="cl">uci set dhcp.lan.ra=disabled
</span></span><span class="line"><span class="cl">uci set network.lan.ipaddr=&#39;192.168.44.44&#39;
</span></span><span class="line"><span class="cl">uci set network.lan.gateway=&#39;192.168.44.1&#39;
</span></span><span class="line"><span class="cl">uci set network.lan.dns=&#39;192.168.44.1&#39;
</span></span><span class="line"><span class="cl">uci set network.globals.ula_prefix=&#39;&#39;
</span></span><span class="line"><span class="cl">uci set wireless.radio0.channel=auto
</span></span><span class="line"><span class="cl">uci set wireless.radio0.disabled=0
</span></span><span class="line"><span class="cl">uci set wireless.radio0.country=CN
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.ssid=Gargoyle
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.encryption=sae-mixed
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.key=password
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.ieee80211k=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.wnm_sleep_mode=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.bss_transition=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.ieee80211r=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.mobility_domain=8888
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.ft_over_ds=0
</span></span><span class="line"><span class="cl">uci set wireless.default_radio0.ft_psk_generate_local=0
</span></span><span class="line"><span class="cl">uci set wireless.radio1.channel=auto
</span></span><span class="line"><span class="cl">uci set wireless.radio1.disabled=0
</span></span><span class="line"><span class="cl">uci set wireless.radio1.country=CN
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ssid=Gargoyle
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.encryption=sae-mixed
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.key=password
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ieee80211k=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.wnm_sleep_mode=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.bss_transition=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ieee80211r=1
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.mobility_domain=8888
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ft_over_ds=0
</span></span><span class="line"><span class="cl">uci set wireless.default_radio1.ft_psk_generate_local=0
</span></span><span class="line"><span class="cl">uci set system.@system[0].hostname=Router
</span></span><span class="line"><span class="cl">uci set system.@system[0].zonename=Asia/Shanghai
</span></span><span class="line"><span class="cl">uci set system.@system[0].timezone=CST-8
</span></span><span class="line"><span class="cl">uci commit
</span></span><span class="line"><span class="cl">/etc/init.d/dnsmasq disable
</span></span><span class="line"><span class="cl">/etc/init.d/odhcpd disable
</span></span><span class="line"><span class="cl">/etc/init.d/firewall disable
</span></span><span class="line"><span class="cl">reboot
</span></span></code></pre></div><div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://openwrt.org/packages/index/network---wirelessapd">https://openwrt.org/packages/index/network---wirelessapd</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://openwrt.org/docs/guide-user/network/wifi/basic">https://openwrt.org/docs/guide-user/network/wifi/basic</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a>&#160;<a href="#fnref1:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://openwrt.org/docs/guide-user/network/wifi/dumbap">https://openwrt.org/docs/guide-user/network/wifi/dumbap</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://github.com/openwrt/openwrt/issues/">https://github.com/openwrt/openwrt/issues/</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p><a href="https://forum.openwrt.org/">https://forum.openwrt.org/</a>&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content></item><item><title>traefik acme 证书导出</title><link>https://vicfree.com/2022/07/traefik-cert-export/</link><pubDate>Tue, 19 Jul 2022 17:03:20 +0800</pubDate><guid>https://vicfree.com/2022/07/traefik-cert-export/</guid><description>来自 https://blog.cubieserver.de/2021/minimal-traefik-v2-certificate-export/ 目前有很多方式导出证书，docker可以自动化，自己选择吧。 https://github.com/ldez/traefik-certs-dumper (Go) https://github.com/koshatul/traefik-acme (Go) https://gist.github.com/dmnt3d/a9696d1590df0a1410be8954df15f59c (Python) https://r4uch.com/export-traefik-certificates/ (Bash) 如何使用bash脚本手动导出证书？ 要求 Linux 系统的虚拟机 traefik 生成</description><content type="html"><![CDATA[<p>来自 <a href="https://blog.cubieserver.de/2021/minimal-traefik-v2-certificate-export/">https://blog.cubieserver.de/2021/minimal-traefik-v2-certificate-export/</a></p>
<p>目前有很多方式导出证书，docker可以自动化，自己选择吧。</p>
<ul>
<li><a href="https://github.com/ldez/traefik-certs-dumper">https://github.com/ldez/traefik-certs-dumper</a> (Go)</li>
<li><a href="https://github.com/koshatul/traefik-acme">https://github.com/koshatul/traefik-acme</a> (Go)</li>
<li><a href="https://gist.github.com/dmnt3d/a9696d1590df0a1410be8954df15f59c">https://gist.github.com/dmnt3d/a9696d1590df0a1410be8954df15f59c</a> (Python)</li>
<li><a href="https://r4uch.com/export-traefik-certificates/">https://r4uch.com/export-traefik-certificates/</a> (Bash)</li>
</ul>
<p>如何使用bash脚本手动导出证书？</p>
<h2 id="要求">要求</h2>
<ol>
<li>Linux 系统的虚拟机</li>
<li>traefik 生成的acme.json</li>
<li>Linux 安装了 jq + openssl</li>
</ol>
<h2 id="开始操作">开始操作</h2>
<ol>
<li>在acme.json目录复制粘贴新建以下脚本，命名随意，如tc.sh</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1"># Requirements: you will need to install jq and maybe openssl</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># creates a directory for all of your certificates</span>
</span></span><span class="line"><span class="cl">mkdir -p certificates/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># reads the acme.json file, please put this file in the same directory as your script</span>
</span></span><span class="line"><span class="cl"><span class="nv">json</span><span class="o">=</span><span class="k">$(</span>cat acme.json<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">export_cer_key <span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="nv">$json</span> <span class="p">|</span> jq -r <span class="s1">&#39;.[].Certificates[] | select(.domain.main == &#34;&#39;</span><span class="nv">$1</span><span class="s1">&#39;&#34;) | .certificate&#39;</span> <span class="p">|</span> base64 -d &gt; certificates/<span class="nv">$1</span>.cer
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="nv">$json</span> <span class="p">|</span> jq -r <span class="s1">&#39;.[].Certificates[] | select(.domain.main == &#34;&#39;</span><span class="nv">$1</span><span class="s1">&#39;&#34;) | .key&#39;</span> <span class="p">|</span> base64 -d &gt; certificates/<span class="nv">$1</span>.key
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">export_pfx <span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        openssl pkcs12 -export -out certificates/<span class="nv">$domain</span>.pfx -inkey certificates/<span class="nv">$domain</span>.key -in certificates/<span class="nv">$domain</span>.cer -passout pass: 
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">read</span> -p <span class="s2">&#34;Do you want to export as .pfx file as well [y]?&#34;</span> REPLY
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># iterates through all of your domains</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> domain in <span class="k">$(</span><span class="nb">echo</span> <span class="nv">$json</span> <span class="p">|</span> jq -r <span class="s1">&#39;.[].Certificates[].domain.main&#39;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$REPLY</span> <span class="o">=</span>~ ^<span class="o">[</span>Yy<span class="o">]</span>$ <span class="o">]]</span>
</span></span><span class="line"><span class="cl">    <span class="k">then</span>
</span></span><span class="line"><span class="cl">        export_cer_key <span class="s2">&#34;</span><span class="nv">$domain</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">        export_pfx <span class="s2">&#34;</span><span class="nv">$domain</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span>
</span></span><span class="line"><span class="cl">        export_cer_key <span class="s2">&#34;</span><span class="nv">$domain</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span></code></pre></div><ol start="2">
<li>对刚新建的脚本添加执行权限</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">chmod +x tc.sh
</span></span></code></pre></div><ol start="3">
<li>确认同目录下同时存在tc.sh 和 acme.json</li>
</ol>
<pre tabindex="0"><code>traefik
├── tc.sh
└── acme.json
</code></pre><ol start="4">
<li>执行脚本</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./tc.sh
</span></span></code></pre></div><ol start="5">
<li>可选导出 pfx 格式证书，证书会出现在 certificates 文件夹里面</li>
</ol>
<pre tabindex="0"><code>traefik
├── certificates
│   ├── cert.cer
│   ├── cert.key
│   └── cert.pfx
├── tc.sh
└── acme.json
</code></pre><h3 id="假如以上是半自动证书导出下面还有全手动的方法">假如以上是半自动证书导出，下面还有全手动的方法。</h3>
<ol>
<li>复制 acme.json 中 certificates 那一行</li>
<li>粘贴到 <a href="https://oktools.net/base64">Base64解码</a> 中解码栏</li>
<li>文本编辑器保存解码结果为 cert.crt</li>
<li>key同理，保存为 cert.key</li>
</ol>
]]></content></item><item><title>利用 Github Action 自动编译OpenWrt</title><link>https://vicfree.com/2022/05/github-action-auto-compile-openwrt/</link><pubDate>Tue, 17 May 2022 15:21:34 +0800</pubDate><guid>https://vicfree.com/2022/05/github-action-auto-compile-openwrt/</guid><description>想自己用 Linux 编译 请看这个视频 https://www.bilibili.com/video/BV1854y1W7fu/ 本次教程基于下列前车之鉴 https://github.com/KFERMercer/OpenWrt-CI 注册 Github 本步骤跳过，网上一大堆，请参考。 1. Fork Openwrt 打开 https://github.com/immortalwrt/immortalwrt/fork 2. 修改 ▶️Actions 的 Workflows yml文</description><content type="html"><![CDATA[<blockquote>
<p>想自己用 Linux 编译 请看这个视频 <a href="https://www.bilibili.com/video/BV1854y1W7fu/">https://www.bilibili.com/video/BV1854y1W7fu/</a></p>
</blockquote>
<h3 id="本次教程基于下列前车之鉴">本次教程基于下列前车之鉴</h3>
<p><a href="https://github.com/KFERMercer/OpenWrt-CI">https://github.com/KFERMercer/OpenWrt-CI</a></p>
<h2 id="注册-github">注册 Github</h2>
<p>本步骤跳过，网上一大堆，请参考。</p>
<h2 id="1-fork-openwrt">1. Fork Openwrt</h2>
<p>打开 <a href="https://github.com/immortalwrt/immortalwrt/fork">https://github.com/immortalwrt/immortalwrt/fork</a></p>
<h2 id="2-修改-actions-的-workflows-yml文件">2. 修改 ▶️Actions 的 Workflows yml文件</h2>
<ol>
<li>
<p>进入你 <code>Fork</code> 后的 <code>OpenWrt</code> 页面</p>
</li>
<li>
<p>检查当前的 <code>OpenWrt</code> 有没有 <code>.github/workflows</code> 文件夹</p>
<blockquote>
<p>有 -&gt; 进入<code>.github/workflows</code> 修改里面的 <code>***.yml</code> 文件</p>
</blockquote>
<blockquote>
<p>没有 -&gt; 进入 <code>▶️Actions</code> 会自动新建 <code>.github/workflows\main.yml</code></p>
</blockquote>
</li>
<li>
<p>复制我在下文提供的 yml模板，粘贴。</p>
</li>
<li>
<p>（可选）参考下文进行自定义修改，比如 <code>加软件</code> <code>改平台</code></p>
</li>
<li>
<p>修改两处 branch 名，从模板的 <code>openwrt-21.02</code> 修改为你当前正在编辑 branch，比如 <code>master</code> 或 <code>main</code></p>
</li>
<li>
<p>修改完成后 <code>Start commit</code> -&gt; <code>Commit changes</code></p>
</li>
</ol>
<h2 id="3-此时你的-openwrt-会自动开始编译">3. 此时你的 OpenWrt 会自动开始编译</h2>
<p>时长约两小时，完成后，去<code>▶️Actions</code>页面下载 <code>OpenWrt_firmware</code> 即可</p>
<h2 id="4-自定义固件">4. 自定义固件</h2>
<ol>
<li>找到你需要安装的包名，官方软件包大全 <a href="https://openwrt.org/packages/index/start">https://openwrt.org/packages/index/start</a></li>
<li>软件包可以从编译环境下 <code>make defconfig</code> 生成 <code>.config</code> 中找到</li>
</ol>
<blockquote>
<p>比如 # CONFIG_PACKAGE_luci-app-dockerman is not set</p>
</blockquote>
<ol start="3">
<li>添加包名到<code>openwrt-ci.yml</code> 中 <code>cat &gt;&gt; .config &lt;&lt;EOF</code>后面，对着我的例子进行修改。</li>
</ol>
<blockquote>
<p>修改为 CONFIG_PACKAGE_luci-app-dockerman=y</p>
</blockquote>
<ol start="4">
<li>编译其他固件，需要修改 <code>Target</code>-&gt; <code>子Target</code> -&gt; <code>设备名</code> 修改下面三行做例子。</li>
</ol>
<blockquote>
<p>注意要和其他行 <code>首字母对齐</code>，错位必编译错误！</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="w">          </span><span class="l">CONFIG_TARGET_ramips=y</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="l">CONFIG_TARGET_ramips_mt7621=y</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="l">CONFIG_TARGET_ramips_mt7621_DEVICE_youhua_wr1200js=y</span><span class="w">
</span></span></span></code></pre></div><h2 id="5-我目前使用的模板">5. 我目前使用的模板</h2>
<blockquote>
<p>我x86默认编译vmdk给ESXi，你用不到可以删除此行。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># This is free software, lisence use MIT.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Copyright (C) 2019 P3TERX &lt;https://p3terx.com&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Copyright (C) 2020 KFERMercer &lt;KFER.Mercer@gmail.com&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># &lt;https://github.com/KFERMercer/OpenWrt-CI&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">OpenWrt-CI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">openwrt-21.02</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># schedule:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   - cron: 0 20 * * *</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">workflow_dispatch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">release</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">types</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="l">published]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">build_openwrt</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build OpenWrt firmware</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-22.04</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">if</span><span class="p">:</span><span class="w"> </span><span class="l">github.event.repository.owner.id == github.event.sender.id</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Checkout</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="l">openwrt-21.02</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Space cleanup</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">env</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">DEBIAN_FRONTEND</span><span class="p">:</span><span class="w"> </span><span class="l">noninteractive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          docker rmi `docker images -q`
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get update
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get -y install build-essential clang flex g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget asciidoc binutils bzip2 util-linux help2man intltool libelf-dev make patch perl-modules python3-dev xsltproc qemu-utils
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get -y autoremove --purge
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get clean
</span></span></span><span class="line"><span class="cl"><span class="sd">          df -h</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Update feeds</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          # sed -i &#39;s/#src-git helloworld/src-git helloworld/g&#39; ./feeds.conf.default
</span></span></span><span class="line"><span class="cl"><span class="sd">          # echo &#34;src-git helloworld https://github.com/fw876/helloworld.git&#34; &gt;&gt; &#34;feeds.conf.default&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          ./scripts/feeds update -a
</span></span></span><span class="line"><span class="cl"><span class="sd">          ./scripts/feeds install -a</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Generate configuration file</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          rm -f ./.config*
</span></span></span><span class="line"><span class="cl"><span class="sd">          touch ./.config
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          #
</span></span></span><span class="line"><span class="cl"><span class="sd">          # 在 cat &gt;&gt; .config &lt;&lt;EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
</span></span></span><span class="line"><span class="cl"><span class="sd">          # 例如:
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          cat &gt;&gt; .config &lt;&lt;EOF
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_TARGET_x86=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_TARGET_x86_64=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_TARGET_x86_64_DEVICE_generic=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_VMDK_IMAGES=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_LUCI_LANG_en=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_LUCI_LANG_zh_Hans=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_zabbix-extra-network=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-attendedsysupgrade=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-ddns=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-firewall=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-https-dns-proxy=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-nlbwmon=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-sqm=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-ssr-plus=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Hysteria=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-turboacc=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_TURBOACC_INCLUDE_BBR_CCA=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-upnp=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-vlmcsd=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-wireguard=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-wol=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_avahi-dbus-daemon=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_avahi-utils=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_bind-dig=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ddns-scripts-cloudflare=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ddns-scripts-dnspod=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ddns-scripts_aliyun=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_nmap-ssl=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_adguardhome=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_curl=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_nano=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_open-vm-tools=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_qrencode=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_whois=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-proto-ipv6=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_wget-ssl=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_libip6tc=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ip6tables=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ip6tables-mod-nat=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_kmod-ipt-nat6=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_kmod-nf-nat6=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_odhcpd-ipv6only=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_odhcp6c=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_6in4=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          EOF
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          #
</span></span></span><span class="line"><span class="cl"><span class="sd">          # ===============================================================
</span></span></span><span class="line"><span class="cl"><span class="sd">          # 
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          sed -i &#39;s/^[ \t]*//g&#39; ./.config
</span></span></span><span class="line"><span class="cl"><span class="sd">          make defconfig</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Make download</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          make download -j8 || make download -j1 V=s
</span></span></span><span class="line"><span class="cl"><span class="sd">          rm -rf $(find ./dl/ -size -1024c)
</span></span></span><span class="line"><span class="cl"><span class="sd">          df -h</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Compile firmware</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          make -j$(nproc) || make -j1 V=s
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;=======================&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;Space usage:&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;=======================&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          df -h
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;=======================&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          du -h ./ --max-depth=1
</span></span></span><span class="line"><span class="cl"><span class="sd">          du -h /mnt/openwrt/ --max-depth=1 || true</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Prepare artifact</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          mkdir -p ./artifact/firmware
</span></span></span><span class="line"><span class="cl"><span class="sd">          mkdir -p ./artifact/package
</span></span></span><span class="line"><span class="cl"><span class="sd">          mkdir -p ./artifact/buildinfo
</span></span></span><span class="line"><span class="cl"><span class="sd">          rm -rf $(find ./bin/targets/ -type d -name &#34;packages&#34;)
</span></span></span><span class="line"><span class="cl"><span class="sd">          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
</span></span></span><span class="line"><span class="cl"><span class="sd">          cp -rf $(find ./bin/packages/ -type f -name &#34;*.ipk&#34;) ./artifact/package/
</span></span></span><span class="line"><span class="cl"><span class="sd">          cp -rf $(find ./bin/targets/ -type f -name &#34;*.buildinfo&#34; -o -name &#34;*.manifest&#34;) ./artifact/buildinfo/</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deliver buildinfo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/upload-artifact@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">OpenWrt_buildinfo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./artifact/buildinfo/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deliver package</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/upload-artifact@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">OpenWrt_package</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./artifact/package/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deliver firmware</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/upload-artifact@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">OpenWrt_firmware</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./bin/targets/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Upload release asset</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">if</span><span class="p">:</span><span class="w"> </span><span class="l">github.event == &#39;release&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">svenstaro/upload-release-action@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">repo_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.YOURTOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">./artifact/firmware/*</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">${{ github.ref }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">file_glob</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span></code></pre></div>]]></content></item><item><title>一键安装 Sonarr Radarr Jackett 追剧一条龙</title><link>https://vicfree.com/2022/04/install-sonarr-radarr-jackett-with-docker-compose/</link><pubDate>Tue, 26 Apr 2022 00:18:41 +0800</pubDate><guid>https://vicfree.com/2022/04/install-sonarr-radarr-jackett-with-docker-compose/</guid><description>感谢原po, 我就基本照着抄就是了。 准备已安装 Docker, docker-compose 的服务器 偷懒下，安装教程引用Techno Tim + 官方教程，脚本复制粘贴完事。 开搞 按下面操作新建文</description><content type="html"><![CDATA[<p><a href="https://nubcakes.net/index.php/2019/04/03/how-to-install-sonarr-radarr-and-jackett-with-docker-compose/">感谢原po</a>, 我就基本照着抄就是了。</p>
<h2 id="准备已安装-docker-docker-compose-的服务器">准备已安装 Docker, docker-compose 的服务器</h2>
<p>偷懒下，安装教程引用<a href="https://docs.technotim.live/posts/docker-compose-install">Techno Tim</a> + <a href="https://docs.docker.com/engine/install/">官方教程</a>，脚本复制粘贴完事。</p>
<h2 id="开搞">开搞</h2>
<p>按下面操作新建文件夹</p>
<blockquote>
<p>接下来我会使用nano编辑器，你喜欢啥用啥。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir docker
</span></span><span class="line"><span class="cl">mkdir docker/radarr
</span></span><span class="line"><span class="cl">mkdir docker/sonarr
</span></span><span class="line"><span class="cl">mkdir docker/jackett
</span></span><span class="line"><span class="cl">mkdir docker/portainer
</span></span><span class="line"><span class="cl">mkdir downloads
</span></span><span class="line"><span class="cl">mkdir downloads/movies
</span></span><span class="line"><span class="cl">mkdir downloads/tv
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> docker
</span></span><span class="line"><span class="cl">touch docker-compose.yml
</span></span><span class="line"><span class="cl">nano docker-compose.yml
</span></span></code></pre></div><h4 id="docker-composeyml配置">docker-compose.yml配置</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">radarr</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">radarr</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">7878</span><span class="p">:</span><span class="m">7878</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/docker/radarr:/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads:/downloads</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads/movies:/movies</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">linuxserver/radarr</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">sonarr</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">sonarr</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">8989</span><span class="p">:</span><span class="m">8989</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/docker/sonarr:/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads:/downloads</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads/tv:/tv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">linuxserver/sonarr</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">jackett</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">jackett</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">9117</span><span class="p">:</span><span class="m">9117</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/docker/jackett:/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads:/downloads</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">linuxserver/jackett</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">portainer</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">portainer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">9000</span><span class="p">:</span><span class="m">9000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/var/run/docker.sock:/var/run/docker.sock</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/docker/portainer:/data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">portainer/portainer-ce</span><span class="w">
</span></span></span></code></pre></div><h2 id="映射nas-smb存储">映射NAS SMB存储</h2>
<p>因为我是虚拟机安装的，所以要映射下载盘</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">apt update
</span></span><span class="line"><span class="cl">apt install cifs-utils
</span></span></code></pre></div><p>使用下面命令挂载到 /home/xxx/downloads</p>
<pre tabindex="0"><code>sudo mount -t cifs -o uid=1000,gid=1000,username=xxx //192.168.xxx.xxx/xxx/downloads /home/xxx/downloads
</code></pre><p>如果你想开机自动挂载</p>
<pre tabindex="0"><code>nano /etc/fstab
</code></pre><p>粘贴以下内容</p>
<pre tabindex="0"><code>//192.168.xx.xx/xxx/downloads /home/xxx/downloads cifs username=xxx,password=xxx,uid=1000,gid=1000,noauto,x-systemd.automount,_netdev,vers=2.1 0 0
</code></pre><pre tabindex="0"><code>sudo mount -a
</code></pre><p>测试一下，一切正常就可以重启试试了</p>
<h2 id="软件如何使用">软件如何使用？</h2>
<p>太多了 自己看吧 <a href="https://wiki.servarr.com/">https://wiki.servarr.com/</a></p>
]]></content></item><item><title>traefik反向代理 https加密访问任何家用设备</title><link>https://vicfree.com/2022/04/use-traefik-https-everything/</link><pubDate>Mon, 25 Apr 2022 22:56:43 +0800</pubDate><guid>https://vicfree.com/2022/04/use-traefik-https-everything/</guid><description>好久没更新了，首发入手PS5，也没啥游戏值得玩的了，期待一下下个月的PS PLUS EXTRA，加钱升级，大方还是不如微软，但是毕竟微软是财大气粗且弱</description><content type="html"><![CDATA[<p>好久没更新了，首发入手PS5，也没啥游戏值得玩的了，期待一下下个月的PS PLUS EXTRA，加钱升级，大方还是不如微软，但是毕竟微软是财大气粗且弱势。</p>
<p>话说最近看到一个<a href="https://www.youtube.com/watch?v=liV3c9m_OX8">Techno Tim的视频</a>，讲到了traefik ssl everything, 我突然来劲了，家里网络已经很久没变化了，手痒了都，开搞。</p>
<p>众所周知，中国宽带网络是限制80,443端口的，导致视频中一些配置不符合我们的习惯，我会删除一些对我们多余的东西，比如https跳转，原教程 config.yml 中大量https跳转，但https跳转的前提是你得开http啊。</p>
<p>traefik 会自动更新 let&rsquo;s Encryt https证书，家用反向代理，自定义端口 custom port: 8443，这难道不诱人吗？</p>
<blockquote>
<p>如何有任何不明白可访问<a href="https://doc.traefik.io/traefik/getting-started/quick-start/">traefik官方Doc</a>，我自己也是看了官方资料才明白的很多的。</p>
</blockquote>
<h2 id="准备已安装-docker-docker-compose-的服务器">准备已安装 Docker, docker-compose 的服务器</h2>
<p>偷懒下，安装教程引用<a href="https://docs.technotim.live/posts/docker-compose-install">Techno Tim</a> + <a href="https://docs.docker.com/engine/install/">官方教程</a>，脚本复制粘贴完事。</p>
<h2 id="traefik-安装开始">traefik 安装开始</h2>
<p>准备项</p>
<ul>
<li>你的Cloudflare注册邮箱</li>
<li>去Cloudflare获取你的API Token，要求最低权限：All zones-Zone:Read, DNS:Edit，或者最高权限的API Key.</li>
<li>购买域名一个，并添加到Cloudflare里</li>
</ul>
<blockquote>
<p>还有其他域名提供商能够使用的<a href="https://doc.traefik.io/traefik/https/acme/">acme</a>，但不适合我们这类小白</p>
</blockquote>
<blockquote>
<p>traefik 管理页面理论上可以不加密码，但是你要发布到公网上，请一定要加密码（加密码请看配置中traefik-auth两项）</p>
</blockquote>
<p>按下面操作新建文件夹</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir traefik
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> traefik
</span></span><span class="line"><span class="cl">mkdir data
</span></span><span class="line"><span class="cl">touch data/acme.json
</span></span><span class="line"><span class="cl">chmod <span class="m">600</span> data/acme.json
</span></span><span class="line"><span class="cl">touch data/traefik.yml
</span></span><span class="line"><span class="cl">touch data/config.yml
</span></span><span class="line"><span class="cl">touch docker-compose.yml
</span></span><span class="line"><span class="cl">docker network create proxy
</span></span></code></pre></div><p>（可选）生成网页密码，填入到配置中</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt update
</span></span><span class="line"><span class="cl">sudo apt install apache2-utils
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="k">$(</span>htpasswd -nb admin 12345678<span class="k">)</span> <span class="p">|</span> sed -e s/<span class="se">\\</span>$/<span class="se">\\</span>$<span class="se">\\</span>$/g
</span></span></code></pre></div><p>接下来我会使用nano编辑器，你喜欢啥用啥。</p>
<h4 id="docker-composeyml配置">docker-compose.yml配置</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano docker-compose.yml
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">traefik</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">traefik:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">traefik</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">security_opt</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="kc">no</span>-<span class="l">new-privileges:true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">proxy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">8443</span><span class="p">:</span><span class="m">8443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">CF_API_EMAIL=XXX@XXX.com</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">CF_DNS_API_TOKEN=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># - CF_API_KEY=YOU_API_KEY</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># be sure to use the correct one depending on if you are using a token or key</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/etc/localtime:/etc/localtime:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/var/run/docker.sock:/var/run/docker.sock:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/XXX/traefik/data/traefik.yml:/traefik.yml:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/XXX/traefik/data/acme.json:/acme.json</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/XXX/traefik/data/config.yml:/config.yml:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.enable=true&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.middlewares.traefik-auth.basicauth.users=XXX:XXXXXXXXXXXXXX&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.entrypoints=https&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.rule=Host(`traefik.XXXX.com`)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.middlewares=traefik-auth&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.tls=true&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.tls.certresolver=cloudflare&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.tls.domains[0].main=XXXX.com&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.tls.domains[0].sans=*.XXXX.com&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.service=api@internal&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">proxy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">external</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span></code></pre></div><h4 id="traefikyml配置">traefik.yml配置</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano data/traefik.yml
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">api</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">dashboard</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">debug</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">https</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;:8443&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">serversTransport</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">insecureSkipVerify</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">providers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">docker</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">endpoint</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;unix:///var/run/docker.sock&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">exposedByDefault</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">file</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filename</span><span class="p">:</span><span class="w"> </span><span class="l">/config.yml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">certificatesResolvers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloudflare</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">acme</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">email</span><span class="p">:</span><span class="w"> </span><span class="l">XXX@XXX.com</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">storage</span><span class="p">:</span><span class="w"> </span><span class="l">acme.json</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">dnsChallenge</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">provider</span><span class="p">:</span><span class="w"> </span><span class="l">cloudflare</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">resolvers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;223.6.6.6:53&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;119.29.29.29:53&#34;</span><span class="w">
</span></span></span></code></pre></div><blockquote>
<p><code>为什么resolvers不选择OpenWrt DNS？因为 ACME 整个验证时间只有几分钟，他会添加一个 txt项 到你的域名DNS下，经过内部DNS缓存，返回几分钟前的解析结果（也就是更新不能及时给traefik），会导致验证时间超时失败</code></p>
</blockquote>
<h4 id="configyml其他设备配置">config.yml其他设备配置</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano data/config.yml
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">http</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="c">#region routers </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">routers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">jellyfin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;https&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rule</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Host(`jellyfin.XXXX.com`)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">middlewares</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default-headers</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">tls</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">jellyfin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">nextcloud</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;https&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rule</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Host(`nextcloud.XXXX.com`)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">middlewares</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default-headers</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">tls</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">nextcloud</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#endregion</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#region services</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">jellyfin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">loadBalancer</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">servers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://192.168.xx.xx:8096&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">passHostHeader</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">nextcloud</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">loadBalancer</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">servers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://192.168.xx.xx:9443&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">passHostHeader</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default-headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">frameDeny</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">sslRedirect</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">browserXssFilter</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">contentTypeNosniff</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">forceSTSHeader</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">stsIncludeSubdomains</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">stsPreload</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">stsSeconds</span><span class="p">:</span><span class="w"> </span><span class="m">15552000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">customFrameOptionsValue</span><span class="p">:</span><span class="w"> </span><span class="l">SAMEORIGIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">customRequestHeaders</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">X-Forwarded-Proto</span><span class="p">:</span><span class="w"> </span><span class="l">https</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default-whitelist</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ipWhiteList</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">sourceRange</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;10.0.0.0/8&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;192.168.0.0/16&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;172.16.0.0/12&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secured</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">chain</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">middlewares</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default-whitelist</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default-headers</span><span class="w">
</span></span></span></code></pre></div><h2 id="启动traefik">启动traefik</h2>
<blockquote>
<p>Warning!!! 获取证书因为需要操作DNS记录，等待生效，需要很长时间，请耐心等待。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker-compose up -d
</span></span></code></pre></div><blockquote>
<p>如何你之前配置配错了，修改配置后重新启动docker命令</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker-compose up -d --force-recreate
</span></span></code></pre></div><p>感兴趣的可以去看看原po，和我的区别，我已经帮大家把https改成8443，支持cloudflare隐藏你的IP(但速度慢)。
推荐大家准备两台 traefik，一台https://xxx.local.xxxx.com, 专门给内部网络访问 不开外部权限；另一台就是教程中https://xxx.xxx.com:8443.</p>
<h3 id="内部域名批量解析">内部域名批量解析</h3>
<p>且你是openwrt，使用下面配置</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano /etc/dnsmasq.conf
</span></span></code></pre></div><p>文件末尾填入</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">address=/.local.xxx.com/192.168.xx.xx
</span></span></code></pre></div><p>新版本OpenWrt可使用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cmd" data-lang="cmd"><span class="line"><span class="cl">uci add_list dhcp.@dnsmasq[0].address=&#39;/local.xxx.com/192.168.xx.xx&#39;
</span></span></code></pre></div><p>来添加，测试无问题，记得 <code>uci commit</code></p>
<h2 id="外部部域名批量解析">外部部域名批量解析</h2>
<blockquote>
<p>记得开启路由器端口8443到你的docker服务器ip地址上
Cloudflare 新增域名解析到你的路由器DDNS上</p>
</blockquote>
<h3 id="安装portainer">安装Portainer</h3>
<p>看<a href="https://docs.technotim.live/posts/traefik-portainer-ssl/">原po吧</a></p>
<h3 id="新装的docker怎么加反代">新装的docker怎么加反代</h3>
<p>理论上新docker只要加上下面这段，都会自动加入到traefik清单里</p>
<pre tabindex="0"><code>    labels:
      - &#34;traefik.enable=true&#34;
      - &#34;traefik.http.routers.portainer-secure.entrypoints=https&#34;
      - &#34;traefik.http.routers.portainer-secure.rule=Host(`portainer.local.example.com`)&#34;
      - &#34;traefik.http.routers.portainer-secure.tls=true&#34;
      - &#34;traefik.http.routers.portainer-secure.service=portainer&#34;
      - &#34;traefik.http.services.portainer.loadbalancer.server.port=9000&#34;
      - &#34;traefik.docker.network=proxy&#34;
</code></pre><p>Updated in 2022/12/12</p>
]]></content></item><item><title>为什么用OpenWrt</title><link>https://vicfree.com/2020/08/why-openwrt/</link><pubDate>Sun, 23 Aug 2020 16:15:38 +0800</pubDate><guid>https://vicfree.com/2020/08/why-openwrt/</guid><description>在谈OpenWrt之前，需要介绍下什么是OpenWrt，用人话来说就是：可替换路由器出厂系统的第三方系统，是用Linux做出来的开源系统。 为</description><content type="html"><![CDATA[<p>在谈OpenWrt之前，需要介绍下什么是<a href="https://zh.wikipedia.org/wiki/OpenWrt">OpenWrt</a>，用人话来说就是：可替换路由器出厂系统的第三方系统，是用<a href="https://zh.wikipedia.org/wiki/Linux">Linux</a>做出来的开源系统。</p>
<p>为什么不用路由器出厂系统，你会问。那是因为出厂系统功能少，速度慢。网件Netgear是大厂中系统最慢的，修改任何设置都需要1-2分钟，而且还会断网。华硕Asus的快一点，但是依然达不到速度快的等级。TP-Link则是一朵奇葩，速度很快，但是功能少，大多数都是VxWork的系统，且都是低配，国外的TP-Link要好一点（毕竟国内还是低价跑量，不识货的居多）。</p>
<p>说说我的网络设备吧：</p>
<ol>
<li>目前使用Esxi架设了一个OpenWrt主路由，x86架构，方便系统升级和刷不死。因为Esxi可运行多个虚拟OpenWrt，可随意切换多个版本的OpenWrt。</li>
<li>两个刷了OpenWrt的无线路由，分别是AC867+AC1300，房间全覆盖AC 5GHz，两个路由都是支持802.11 kvr，可无限漫游，但是我只启用了802.11 kv， 802.11r 未启用。</li>
<li>所有无线路由都是使用LAN连接，无线路由使用了<a href="https://openwrt.org/docs/guide-user/network/wifi/dumbap">AP模式</a>，因为我每个房间都有2-4根网线。</li>
<li>入户光猫接2层管理型交换机，对WAN和LAN划分不同VLAN，可单线传输WAN+LAN，节省网线，且交换机每根网线都可以变成WAN，直连拨号。</li>
</ol>
<p>那么怎么刷机OpenWrt呢，这是一个很复杂的问题，欢迎去<a href="https://www.right.com.cn/forum/">恩山论坛</a>讨论此问题，或者去<a href="https://openwrt.org/toh/start">OpenWrt官方</a>。</p>
<p>官方OpenWrt缺少很多国人专用软件，推荐使用中国特供OpenWrt: <a href="https://github.com/immortalwrt/immortalwrt">https://github.com/immortalwrt/immortalwrt</a></p>
<p><a href="https://github.com/coolsnowwolf/lede">Deprecated</a> LEDE。你问为什么这个叫LEDE，这个是历史遗留问题：OpenWrt另有一个复刻分支项目，名为LEDE，两者于2018年1月合并，合并后的项目使用OpenWrt的名字、LEDE的源代码。</p>
<p><a href="https://www.zhihu.com/people/denglj">知乎网友denglj</a>关于路由历史的总结：<a href="https://www.zhihu.com/question/20822589/answer/1001410286">https://www.zhihu.com/question/20822589/answer/1001410286</a></p>
<blockquote>
<p>2002年10月，Linksys公司（由一对移民美国的台湾夫妇曹英伟和吴健创建）发布了名为WRT54G的无线路由器的第1个版本，该机型基于32-bit MIPS芯片，搭载了基于Linux内核的固件，并且可以刷机；WRT的含义，Linksys原意可能是指 Wirless Receiver/Transmitter，现在大家都解读为Wirless RouTer；</p>
</blockquote>
<blockquote>
<p>2003年3月，Cisco公司以5亿美元的价格收购了Linksys，成为其子公司，此后Linksys推出的产品都标记上 Linksys by Cisco；</p>
</blockquote>
<blockquote>
<p>2003年6月，Linux Kernel 开发组听闻WRT54G搭载了包含GPL开源协议的Linux代码，要求Linksys开源相关部分的代码，为此FSF(自由软件基金会)还起诉Cisco；</p>
</blockquote>
<blockquote>
<p>2003年7月，尽管各方对WRT54G固件是否应该开源有所争议，不过Cisco和Linksys迫于外界压力还是开源了WRT54G固件，至此，各种定制固件和路由器刷机开始流行了起来（Lintel在其2012年的一份文档中说是2003年3月思科被迫开源，其实有误，3月份思科和领势还在忙收购的事吧）；</p>
</blockquote>
<blockquote>
<p>2004年1月，OpenWrt 项目启动（据其官网自我介绍，未找到源码或论坛讨论等其他佐证），基于WRT54G固件开发，后来（不知道是多久以后，根据2004和2005年的论坛信息显示，Alchemy如日中天的时候OpenWrt还是个弟弟）发布名为“stable release”的版本；</p>
</blockquote>
<blockquote>
<p>2004年6月，Sevasoft公司基于Linksys固件放出了Alchemy v1.0，他们做的固件在当时是最流行的，在v1.0之前的pre版本就很流行了，开发也很活跃，Sevasoft也是WRT54G系列最早的开源开发者之一；</p>
</blockquote>
<blockquote>
<p>2004年11月， Timothy Jans(又叫 Avenger 2.0)，基于Linksys开源的WRT54G系列的固件发布了HyperWRT，主要是开放一些官版受限的功能，但又尽可能保持原汁原味；</p>
</blockquote>
<blockquote>
<p>2005年1-2月，Linksys为了支持这些第三方固件把WRT54G v4机型拿来重新上市，并重命名为WRT54GL其中L是指Linux，据Linksys相关负责人在2018年称，WRT54GL是迄今为止最畅销的路由器；Sveasoft公司鉴于自己在Alchemy固件上取得的巨大成功，有了转商业运营赚钱的想法，但限于GPL协议，又不得不开源，想出的变通做法就是，让用户每年交20美元的订阅费，付费用户可以进入论坛享用商用版固件，而免费用户只有使用更新较慢的版本，Alchemy社区内也有人看不惯这种收费行为，于是自行修改Alchemy然后对外发布；</p>
</blockquote>
<blockquote>
<p>2005年1月22日，Sebastian Gottschall(又叫BrainSlayer)基于Alchemy v16固件开发了第一版DD-WRT v16固件，版本号沿用Alchemy的，DD是德国东部Dresden城市的汽车牌照的缩写，该城市是DD-WRT开发组生活的地方；</p>
</blockquote>
<blockquote>
<p>2005年2月，HyperWRT原版停更， tofu和 Thibor 两名开发者基于它继续开发，项目名为 HyperWRT +tofu 和 HyperWRT Thibor；</p>
</blockquote>
<blockquote>
<p>2005年中，OpenWrt 发布了名为 “experimental”的版本；</p>
</blockquote>
<blockquote>
<p>2005年12月，DD-WRT v23发布，鉴于Alchemy社区的内斗和商业付费的风险，DD-WRT自v23开始将固件核心替换为了OpenWrt；</p>
</blockquote>
<blockquote>
<p>2006年2月，HyperWRT+tofu停止开发，合并入HyperWRT Thibor，后者开发至2008年2月停更；</p>
</blockquote>
<blockquote>
<p>2006年12月， Jonathan Zarate发布了 Tomato(番茄，也简称TT) 的第一个版本，基于HyperWRT为Linksys WRT54G系列和Buffalo WHR-G54S系列机型定制更易用功能更强的固件，主要支持博通Broadcom的系列芯片；</p>
</blockquote>
<blockquote>
<p>2007年1月，OpenWrt发布了代号为White Russian的固件，这个版本之后的OpenWrt才变得越发流行；</p>
</blockquote>
<blockquote>
<p>2008年7月14日，Eric Bishop基于OpenWrt Kamikaze(v7.x和v8.x)发布了Gargoyle(石像鬼)固件的第一个稳定版v1.0，加入了自己的包管理器，格式为 gpkg；</p>
</blockquote>
<blockquote>
<p>2008年7月26日，DD-WRT v24 SP1 发布，然后至今停更，从2010年起DD-WRT社区诸多开发者在不断发布各种变体版本的固件；</p>
</blockquote>
<blockquote>
<p>2010年，华硕ASUS发布了RT-N56U路由器（具体发布日期没找到，华硕官网说RT-N56U获得了2010年的iF设计奖），该机型搭载的是联发科MTK的芯片；</p>
</blockquote>
<blockquote>
<p>2010年6月28日，Tomato(番茄) 官方更新了v1.28稳定版，然后至今还未更新；</p>
</blockquote>
<blockquote>
<p>2011年1月，华硕在CES上发布了RT-N66U路由器，该机型最早使用Asuswrt固件的（华硕更早机器搭载的固件还没统一成型），Asuswrt是基于Tomato-RT/Tomato-USB开发，主要支持博通Broadcom芯片和部分高通Atheros芯片；同月，高通Qualcomm收购创锐讯Atheros为全资子公司，后者主要研发无线通讯芯片；</p>
</blockquote>
<blockquote>
<p>2012年5月3日，俄罗斯人Andy Padavan(老毛子)创建了rt-n56u项目并提交初始化代码，基于 Asuswrt-Merlin 固件开发，由于RT-N56U搭载的是联发科芯片，后来Padavan被移植到多款基于联发科芯片的路由；</p>
</blockquote>
<blockquote>
<p>2012年6月19日，加拿大人Eric Sauvageau创建了Asuswrt-Merlin(梅林) 项目并提交了初始化代码，基于 Asuswrt 3.0.0.3.144；</p>
</blockquote>
<blockquote>
<p>2013年10月，Cisco公司将Linksys卖给了Belkin公司，Linksys至此与思科无关，新东家Belkin保留了Linksys原品牌；</p>
</blockquote>
<blockquote>
<p>2013年-2016年，国内各大神开始在论坛活跃最频繁的时间段，发布相关教程和他们基于OpenWrt/LEDE、Tomato、DD等定制的固件，Lean、Lintel、佐须之男都出名在这个时段；</p>
</blockquote>
<blockquote>
<p>2016年3月1日，佐须之男在Tomato基础上(应该是基于Tomato v1.28)，发布了Tomato Phoenix(不死鸟)的第一个公开测试版，主要增加了Tomato对联发科芯片的支持；</p>
</blockquote>
<blockquote>
<p>2016年5月，OpenWrt 的部分核心成员基于OpenWrt另起炉灶开了LEDE项目，主要因看不惯既有社区的乌烟瘴气和旧源码的质量；</p>
</blockquote>
<blockquote>
<p>2017年1月24日，Lintel宣布因团队接手Newifi系列路由的固件维护，而PandoraBox(潘多拉)停止更新，该固件是为了照顾部分英文水平较菜和动手能力较差的玩家，对OpenWRT/LEDE做了本地化，并预编译或安装了大陆用户常用的某些功能，最早发布在 openwrt.org.cn上；</p>
</blockquote>
<blockquote>
<p>2017年2月，LEDE的第一个稳定版发布，版本号为v17.01.0，LEDE的主要改进是重构了OpenWrt代码，替换了文件系统改为JFFS2，更友好的Web界面LuCI，更多的opkg包支持等；</p>
</blockquote>
<blockquote>
<p>2018年1月，OpenWrt 老项目和离家出走的LEDE决定复合，名为OpenWrt/LEDE，在原LEDE团队的规矩和主导下运作，但名字仍叫OpenWrt；</p>
</blockquote>
<blockquote>
<p>2018-2019年，OpenWrt和LEDE主要在版本号为v18.x的代码上完成合并工作，DD-WRT、Asuswrt-Merlin、Padavan等活跃项目也在持续更新。现在，随着路由固件定制、开发技术的普及，各路论坛里基于OpenWrt/LEDE、DD-WRT、Merlin、Padavan、Tomato等知名固件的各种私人订制层出不穷……</p>
</blockquote>
<p><del>上面的OpenWrt编译简单，且成功率高，软件齐全，编译前记得把 lede/feeds.conf.default 里的#src-git helloworld <a href="https://github.com/fw876/helloworld">https://github.com/fw876/helloworld</a> 前的 <code>#</code> 去除。</del></p>
<p>Updated in 2022/12/12</p>
]]></content></item><item><title>关于 PS5</title><link>https://vicfree.com/2020/04/about-ps5/</link><pubDate>Thu, 30 Apr 2020 18:49:43 +0800</pubDate><guid>https://vicfree.com/2020/04/about-ps5/</guid><description>Playstation 5 索尼在3月18日发布了一个原本在计划 GDCGame Developers Conference大会上演讲的视频，那个视频是讲给游戏开发者听的，内容非常的硬，还是需要我们翻</description><content type="html"><![CDATA[<h2 id="playstation-5">Playstation 5</h2>
<p>索尼在3月18日发布了一个原本在计划 GDC<code>Game Developers Conference</code>大会上演讲的视频，那个视频是讲给游戏开发者听的，内容非常的硬，还是需要我们翻译成人话。</p>
<p>已经有大佬翻译好了大佬的解释视频</p>
<blockquote>
<p><a href="https://www.bilibili.com/video/BV1QA411v783/">第一话</a></p>
</blockquote>
<blockquote>
<p><a href="https://www.bilibili.com/video/BV1QK4y147Gv/">第二话</a></p>
</blockquote>
<blockquote>
<p><a href="https://www.bilibili.com/video/BV1zK4y147bh/">第三话</a></p>
</blockquote>
<p>演讲开始介绍了历代游戏主机的开发者熟悉周期，体现了这一次PS5开发工具对开发者很友好。</p>
<table>
<thead>
<tr>
<th style="text-align:center">PS1</th>
<th style="text-align:center">PS2</th>
<th style="text-align:center">PS3</th>
<th style="text-align:center">PS4</th>
<th style="text-align:center">PS5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1-2个月</td>
<td style="text-align:center">3-6个月</td>
<td style="text-align:center">6-12个月</td>
<td style="text-align:center">1-2个月</td>
<td style="text-align:center">小于1个月</td>
</tr>
</tbody>
</table>
<p>索尼也介绍了很多关于 PS5<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>软硬件的细节，但是很多信息都在传输中丢失了，或者歪曲了事实。</p>
<h2 id="ps5的超快-ssd">PS5的超快 SSD</h2>
<p>PS5 更快的 SSD 给予开发者自由，很多人都认为 PS5 这么快的SSD起不到作用，没有人会为了PS5这么快的SSD进行优化。</p>
<p>乍一看好像说的没错，但是你自己想想PC，为什么有人买三星980 Pro，因为它速度快啊，你见过有游戏会为三星980 Pro进行优化吗，速度快，使得游戏每个环节都会运行的快，程序员写的程序再差也能流畅运行。</p>
<p>并且每代主机寿命约6年，现在的每秒5.5GB/s，说不定5年后 SSD 每秒20GB/s，现在 SSD 成本虽然高，但是只是相较于HDD，和 Xbox SX 的2.4GB/s的SSD相比，价格差我猜每GB价格 PS5 是 XBox SX 的1.5倍。可能也是 PS5 内置825GB，Xbox SX内置1TB的原因。</p>
<p>PS5 内置了 PCIe 4x4  12通道825GB SSD，索尼当然可以加入更大 SSD，但是最终价格依然会转嫁到消费者，所以索尼认为825G是最合适的大小。但发布时会不会出更大SSD没有提到。</p>
<p>PS5支持外置 HDD 玩 PS4 游戏，PS5游戏不支持在外置 HDD 运行。</p>
<p>PS5支持外置PCIe 4x4 M.2 SSD，可以购买消费者级SSD，但推荐2020年底等待 PS5 兼容 SSD。
消费者级 M.2 SSD 只支持2个优先级，但是 PS5 内置SSD支持6个优先级，所以使用的M.2 SSD速度必须超过PS5内置SSD速度，以便PS5突然需要加载数据，假如是低速SSD此时会被其他数据传输占用，无法加载重要数据。</p>
<h2 id="定制-rdna2-gpu">定制 RDNA2 GPU</h2>
<p>假如你能看懂‘定制’是什么意思，就不会怀疑 PS5 使用的是 RDNA1 了。如果你怀疑 PS5 用的不是 RDNA2，你可以立即保存证据 <a href="https://www.youtube.com/watch?v=ph8LyNIT9sg">视频</a> <a href="https://blog.us.playstation.com/2020/03/18/unveiling-new-details-of-playstation-5-hardware-technical-specs/">博客</a>，等PS5上市，拿出上面的证据去告索尼欺诈，人越多，赔款越多，别我我没告诉你发财机会哦。</p>
<p>PS5 很多技术都是和 AMD 共同研发，假如 RDNA2 显卡上市了，包含了 PS5 GPU 某些功能，并不表示 PS5 抄的 AMD/PC 的作业。</p>
<p>PS5 支持向下 PS4 兼容，PS4 向下兼容是与 AMD 一起合作开发，但因为每个游戏都不一样，向下兼容也需要对应游戏做出相应的修改，如同每当一个新游戏出来，AMD/NV都会出一版优化特定游戏的驱动。</p>
<p>索尼已测试 PS4 按时间排序前100的游戏，几乎所有<code>Almost all of them</code>游戏都能 PS5 上市时运行。</p>
<p>PS5 支持光线追踪，个别游戏实现非常低的代价运行了以反射为基础的光线追踪。</p>
<p>PS5 支持 AMD SmartShift, PS5 的 CPU GPU 的功耗就是跷跷板，CPU 功耗增高，GPU 功耗就会降低，反之亦然。</p>
<p>Zen 2 CPU 3.5GHz, RDNA 2 GPU 2.23GHz<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>，并且 GPU 大部分时间都会保持或接近 2.23GHz 附近，通常降低10%功耗，只需要降低几个百分点的频率，所以 PS5 降频情况非常少。</p>
<h2 id="3d-音频">3D 音频</h2>
<p>画面虽然很重要，但是音频也比你想的要重要，PS5 使用 RDNA2 的 CU 进行改造，实现了类似 PS3 SPU的能力，Tempest Engine 让你用普通电视机扬声器也能有 3D 音效（当然带耳机更好），实现听声辩位。</p>
<p>其他更详细的介绍请看A9VG的专栏。<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></p>
<h2 id="手柄">手柄</h2>
<p>好不好看，见仁见智，但是手柄背面的图没有放出来，希望背面有惊喜<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>
<img src="https://live.staticflickr.com/65535/49747503557_566da5ebc8_3k.jpg" alt="img"></p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.playstation.com/en-us/explore/ps5/">https://www.playstation.com/en-us/explore/ps5/</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://blog.us.playstation.com/2020/03/18/unveiling-new-details-of-playstation-5-hardware-technical-specs/">https://blog.us.playstation.com/2020/03/18/unveiling-new-details-of-playstation-5-hardware-technical-specs/</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://www.a9vg.com/article/71038">https://www.a9vg.com/article/71038</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://blog.us.playstation.com/2020/04/07/introducing-dualsense-the-new-wireless-game-controller-for-playstation-5/">https://blog.us.playstation.com/2020/04/07/introducing-dualsense-the-new-wireless-game-controller-for-playstation-5/</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content></item><item><title>我喜欢的PS4游戏</title><link>https://vicfree.com/2020/02/my-favourite-ps4-games/</link><pubDate>Sat, 29 Feb 2020 23:50:47 +0800</pubDate><guid>https://vicfree.com/2020/02/my-favourite-ps4-games/</guid><description>PS4时代就要结束了，主机大约每隔6年左右就会换代，接任者PS5将在2020年底发售，而且PS5会有向下兼容，向下兼容这个事，索尼在PS4时</description><content type="html"><![CDATA[<p>PS4时代就要结束了，主机大约每隔6年左右就会换代，接任者PS5将在2020年底发售，而且PS5会有向下兼容，向下兼容这个事，索尼在PS4时代可做的真的不算好。PS5向下兼容理想情况是：PS5兼容PS1-PS4全家桶，但若只兼容PS4，要这样我就要唱衰PS5啦。话说今天都2月底了，新Xbox都差发布价格了，你看索尼嘴可真严实啊，这是想TM搞个大新闻吗。</p>
<p>说起我的游戏经历，我在PS4中期时才购买了PS4，在此之前一直是拿笔记本电脑玩的，很多学生都有类似的经历吧。我那是一台垃圾的i5-480M+GT540M，有啥不能玩的，降特效啊。15帧能玩，20帧流畅，那个时候真的玩了不少的游戏。</p>
<p>这个清单我只推荐我玩过的，我认为好玩的才会列出来，关于一个游戏好不好玩，我只能以自身的体验和经历做参考的，并不能代表所有人。</p>
<p>好开始吧</p>
<ul>
<li>Metal Gear Solid V: The Phantom Pain <a href="http://www.vgtime.com/game/201.jhtml">合金装逼/潜龙谍影</a></li>
</ul>
<blockquote>
<p>这个合金装逼5，前一小时其实我是拒绝的，因为我没有合金装备1-4的经历，完全一脸懵逼，但玩下去后发现，装逼装的真好，做起了合金人犯，游戏不注重手速与反应，手残也能玩出花样。</p>
</blockquote>
<ul>
<li>Life Is Strange <a href="http://www.vgtime.com/game/187.jhtml">奇异人生</a></li>
</ul>
<blockquote>
<p>主角MAX突然获得了时光倒流的能力，用这个能力在游戏中解决各种谜题。游戏结局也是非常棒，是的，我不管玩几次我都会选这个结局。记忆使人成为人，没有记忆人类啥都不是。
-Don&rsquo;t you forget about me&hellip;
-Never</p>
</blockquote>
<ul>
<li>Call of Duty 4: Modern Warfare <a href="http://www.vgtime.com/game/2354.jhtml">使命召唤4：现代战争</a></li>
</ul>
<blockquote>
<p>这个游戏有<code>Remastered</code>重制版了，在第一次玩到这游戏真的是惊了，第一次发现游戏的表现力还能这么精彩。画面、剧情和玩法，嗯，真的爽。</p>
</blockquote>
<ul>
<li>Call of Duty: Modern Warfare 2 <a href="http://www.vgtime.com/game/2589.jhtml">使命召唤：现代战争2</a></li>
</ul>
<blockquote>
<p>现代战争2是上一条的续作，都是一个团队做的，一样的棒。</p>
</blockquote>
<ul>
<li>BATMAN: ARKHAM KNIGHT <a href="http://www.vgtime.com/game/27.jhtml">蝙蝠侠 阿卡姆骑士</a></li>
</ul>
<blockquote>
<p>我为啥不提另两部的阿卡姆呢？因为画面，这一代的画面因为进入了PS4时代，画面提升巨大，能让你体验做蝙蝠侠的感觉，而且蝙蝠侠的游戏中演出真的很棒。<strong>谜语人，滚出哥谭。</strong></p>
</blockquote>
<ul>
<li>The Witcher 3: Wild Hunt <a href="http://www.vgtime.com/game/361.jhtml">猎魔人3 狂猎</a></li>
</ul>
<blockquote>
<p>习惯来说，应该叫巫师3，但是写出来就要严谨和装逼啦。体验杰洛特在猎魔人的世界闲逛冒险<del>打桩</del>的故事。买一送一，还送陶森特地图，蠢驴YES。</p>
</blockquote>
<ul>
<li>Titanfall 2 <a href="http://www.vgtime.com/game/3611.jhtml">泰坦天降2</a></li>
</ul>
<blockquote>
<p>还是出自COD 现代战争1/2的团队，虽然他们的经历很忐忑，但是游戏水平一直保持的很好，这个简直有点奇迹。想到好莱坞电影，第一部都是接近满分，第三部基本上就是烂片了。一部比一部好的，简直屈指可数，<code>Mad Max</code>疯狂麦克斯就是越拍越好的那个。</p>
</blockquote>
<ul>
<li>God of War <a href="http://www.vgtime.com/game/4310.jhtml">战神</a></li>
</ul>
<blockquote>
<p>战神3免费送了，我都玩不下去，就这个真的好玩，游戏设计很棒，手残也能打的下去，不劝退。缺点就是剧情太短，开个头。</p>
</blockquote>
<ul>
<li>What Remains of Edith Finch <a href="http://www.vgtime.com/game/546.jhtml">伊迪丝芬奇的记忆</a></li>
</ul>
<blockquote>
<p>这个游戏真的是艺术，简直太美太棒了。</p>
</blockquote>
<ul>
<li>Red Dead Redemption 2 <a href="http://www.vgtime.com/game/4446.jhtml">荒野大镖客 救赎2</a></li>
</ul>
<blockquote>
<p>说到这个游戏，玩法真的太追求真实，有点累。但是它营造了一个非常真实的世界，你可以全身心去体验这个世界。R星物理做的真的是第一，没话说。</p>
</blockquote>
<ul>
<li><del>赛博朋克2077 <a href="http://www.vgtime.com/game/73.jhtml">Cyberpunk 2077</a></del></li>
</ul>
<blockquote>
<p><del>虽然还没发售，但是我知道我会很喜欢它的。</del></p>
</blockquote>
<p>见识浅薄，只能写这么多了。</p>
]]></content></item><item><title>第一篇测试文章</title><link>https://vicfree.com/2020/02/my-first-post/</link><pubDate>Tue, 25 Feb 2020 19:26:13 +0800</pubDate><guid>https://vicfree.com/2020/02/my-first-post/</guid><description>Hello World! You MotherFucker! 国际惯例的标准hello world开始。</description><content type="html"><![CDATA[<p>Hello World!</p>
<p>You MotherFucker!</p>
<p>国际惯例的标准hello world开始。</p>
]]></content></item></channel></rss>