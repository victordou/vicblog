<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Victor</title><link>https://vicfree.com/posts/</link><description>Recent content in Posts on Victor</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 19 Jul 2022 17:03:20 +0800</lastBuildDate><atom:link href="https://vicfree.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>traefik acme 证书导出</title><link>https://vicfree.com/2022/07/traefik-cert-export/</link><pubDate>Tue, 19 Jul 2022 17:03:20 +0800</pubDate><guid>https://vicfree.com/2022/07/traefik-cert-export/</guid><description>来自 https://blog.cubieserver.de/2021/minimal-traefik-v2-certificate-export/ 目前有很多方式导出证书，docker可以自动化，自己选择吧。 https://github.com/ldez/traefik-certs-dumper (Go) https://github.com/koshatul/traefik-acme (Go) https://gist.github.com/dmnt3d/a9696d1590df0a1410be8954df15f59c (Python) https://r4uch.com/export-traefik-certificates/ (Bash) 如何使用bash脚本手动导出证书？ 要求 Linux 系统的虚拟机 traefik 生成</description><content type="html"><![CDATA[<p>来自 <a href="https://blog.cubieserver.de/2021/minimal-traefik-v2-certificate-export/">https://blog.cubieserver.de/2021/minimal-traefik-v2-certificate-export/</a></p>
<p>目前有很多方式导出证书，docker可以自动化，自己选择吧。</p>
<ul>
<li><a href="https://github.com/ldez/traefik-certs-dumper">https://github.com/ldez/traefik-certs-dumper</a> (Go)</li>
<li><a href="https://github.com/koshatul/traefik-acme">https://github.com/koshatul/traefik-acme</a> (Go)</li>
<li><a href="https://gist.github.com/dmnt3d/a9696d1590df0a1410be8954df15f59c">https://gist.github.com/dmnt3d/a9696d1590df0a1410be8954df15f59c</a> (Python)</li>
<li><a href="https://r4uch.com/export-traefik-certificates/">https://r4uch.com/export-traefik-certificates/</a> (Bash)</li>
</ul>
<p>如何使用bash脚本手动导出证书？</p>
<h2 id="要求">要求</h2>
<ol>
<li>Linux 系统的虚拟机</li>
<li>traefik 生成的acme.json</li>
<li>Linux 安装了 jq + openssl</li>
</ol>
<h2 id="开始操作">开始操作</h2>
<ol>
<li>在acme.json目录复制粘贴新建以下脚本，命名随意，如tc.sh</li>
</ol>
<pre tabindex="0"><code>#!/bin/bash

# Requirements: you will need to install jq and maybe openssl

# creates a directory for all of your certificates
mkdir -p certificates/

# reads the acme.json file, please put this file in the same directory as your script
json=$(cat acme.json)

export_cer_key () {
    echo $json | jq -r &#39;.[].Certificates[] | select(.domain.main == &#34;&#39;$1&#39;&#34;) | .certificate&#39; | base64 -d &gt; certificates/$1.cer
    echo $json | jq -r &#39;.[].Certificates[] | select(.domain.main == &#34;&#39;$1&#39;&#34;) | .key&#39; | base64 -d &gt; certificates/$1.key
}

export_pfx () {
        openssl pkcs12 -export -out certificates/$domain.pfx -inkey certificates/$domain.key -in certificates/$domain.cer -passout pass: 
}

read -p &#34;Do you want to export as .pfx file as well [y]?&#34; REPLY

# iterates through all of your domains
for domain in $(echo $json | jq -r &#39;.[].Certificates[].domain.main&#39;)
do
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        export_cer_key &#34;$domain&#34;
        export_pfx &#34;$domain&#34;
    else
        export_cer_key &#34;$domain&#34;
    fi
done
</code></pre><ol start="2">
<li>对刚新建的脚本添加执行权限</li>
</ol>
<pre tabindex="0"><code>chmod +x tc.sh
</code></pre><ol start="3">
<li>确认同目录下同时存在tc.sh 和 acme.json</li>
</ol>
<pre tabindex="0"><code>traefik
├── tc.sh
└── acme.json
</code></pre><ol start="4">
<li>执行脚本</li>
</ol>
<pre tabindex="0"><code>./tc.sh
</code></pre><ol start="5">
<li>可选导出 pfx 格式证书，证书会出现在 certificates 文件夹里面</li>
</ol>
<pre tabindex="0"><code>traefik
├── certificates
│   ├── cert.cer
│   ├── cert.key
│   └── cert.pfx
├── tc.sh
└── acme.json
</code></pre><h3 id="假如以上是半自动证书导出下面还有全手动的方法">假如以上是半自动证书导出，下面还有全手动的方法。</h3>
<ol>
<li>复制 acme.json 中 certificates 那一行</li>
<li>粘贴到 <a href="https://oktools.net/base64">Base64解码</a> 中解码栏</li>
<li>文本编辑器保存解码结果为 cert.crt</li>
<li>key同理，保存为 cert.key</li>
</ol>
]]></content></item><item><title>利用 Github Action 自动编译OpenWrt</title><link>https://vicfree.com/2022/05/github-action-auto-compile-openwrt/</link><pubDate>Tue, 17 May 2022 15:21:34 +0800</pubDate><guid>https://vicfree.com/2022/05/github-action-auto-compile-openwrt/</guid><description>本次教程基于下列前车之鉴 https://github.com/coolsnowwolf/lede https://github.com/KFERMercer/OpenWrt-CI 注册Github 本步骤跳过，网上一大堆 Fork Openwrt https://github.com/coolsnowwolf/lede/fork 开启Github Action 进入你 fork 成功后的lede/openwrt 进入 Action 阅读</description><content type="html"><![CDATA[<h2 id="本次教程基于下列前车之鉴">本次教程基于下列前车之鉴</h2>
<p><a href="https://github.com/coolsnowwolf/lede">https://github.com/coolsnowwolf/lede</a></p>
<p><a href="https://github.com/KFERMercer/OpenWrt-CI">https://github.com/KFERMercer/OpenWrt-CI</a></p>
<h2 id="注册github">注册Github</h2>
<p>本步骤跳过，网上一大堆</p>
<h2 id="fork-openwrt">Fork Openwrt</h2>
<p><a href="https://github.com/coolsnowwolf/lede/fork">https://github.com/coolsnowwolf/lede/fork</a></p>
<h2 id="开启github-action">开启Github Action</h2>
<ol>
<li>进入你 <code>fork</code> 成功后的lede/openwrt</li>
<li>进入 <code>Action</code></li>
<li>阅读后打勾，启用 <code>Action</code></li>
</ol>
<h2 id="准备workflows配置文件">准备Workflows配置文件</h2>
<ol>
<li>打开<a href="https://github.com/KFERMercer/OpenWrt-CI/blob/master/openwrt-ci.yml">KFERMercer OpenWrt-CI.yml</a></li>
<li>复制全部内容</li>
</ol>
<h2 id="编辑workflows配置文件">编辑Workflows配置文件</h2>
<ol>
<li>返回你的OpenWrt的 <code>Code</code> 页面</li>
<li>依次打开 <code>.github/workflows/</code> 文件夹</li>
<li>打开 <code>openwrt-ci.yml</code></li>
<li>粘贴你之前复制的.yml内容</li>
<li>根据你的要求自定义yml的内容</li>
<li>修改完成 <code>Start commit</code> -&gt; <code>Commit changes</code></li>
</ol>
<h2 id="此时你的-openwrt-会自动开始编译">此时你的 OpenWrt 会自动开始编译</h2>
<p>时长越两小时，下载OpenWrt_firmware即可</p>
<h2 id="如何自定义固件">如何自定义固件</h2>
<ol>
<li>找到你需要安装的包名，官方<a href="https://openwrt.org/packages/index/start">https://openwrt.org/packages/index/start</a></li>
<li>Lean/coolsnowwolf 的软件包可以从 make defconfig 配置文件 <code>.config</code> 中找到</li>
<li>添加包到<code>openwrt-ci.yml</code> 中 <code>cat &gt;&gt; .config &lt;&lt;EOF</code>后面</li>
</ol>
<p>以下删除网易云+迅雷快鸟，并添加一堆自用软件baidupcs, mwan3, ipv6, DOH, Cloudflare DDNS, SMB映射等。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># This is free software, lisence use MIT.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Copyright (C) 2019 P3TERX &lt;https://p3terx.com&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Copyright (C) 2020 KFERMercer &lt;KFER.Mercer@gmail.com&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># &lt;https://github.com/KFERMercer/OpenWrt-CI&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">OpenWrt-CI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">master</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># schedule:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   - cron: 0 20 * * *</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">release</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">types</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="l">published]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">build_openwrt</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build OpenWrt firmware</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">if</span><span class="p">:</span><span class="w"> </span><span class="l">github.event.repository.owner.id == github.event.sender.id</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Checkout</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="l">master</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Space cleanup</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">env</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">DEBIAN_FRONTEND</span><span class="p">:</span><span class="w"> </span><span class="l">noninteractive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          docker rmi `docker images -q`
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get update
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get -y autoremove --purge
</span></span></span><span class="line"><span class="cl"><span class="sd">          sudo -E apt-get clean
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
</span></span></span><span class="line"><span class="cl"><span class="sd">          # ln -s /mnt/openwrt/bin ./bin
</span></span></span><span class="line"><span class="cl"><span class="sd">          # mkdir -p ./build_dir
</span></span></span><span class="line"><span class="cl"><span class="sd">          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
</span></span></span><span class="line"><span class="cl"><span class="sd">          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
</span></span></span><span class="line"><span class="cl"><span class="sd">          # ln -s /mnt/openwrt/dl ./dl
</span></span></span><span class="line"><span class="cl"><span class="sd">          # ln -s /mnt/openwrt/feeds ./feeds
</span></span></span><span class="line"><span class="cl"><span class="sd">          # ln -s /mnt/openwrt/staging_dir ./staging_dir
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          df -h</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Update feeds</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;src-git helloworld https://github.com/fw876/helloworld.git&#34; &gt;&gt; &#34;feeds.conf.default&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          ./scripts/feeds update -a
</span></span></span><span class="line"><span class="cl"><span class="sd">          ./scripts/feeds install -a</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Generate configuration file</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          rm -f ./.config*
</span></span></span><span class="line"><span class="cl"><span class="sd">          touch ./.config
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          #
</span></span></span><span class="line"><span class="cl"><span class="sd">          # 在 cat &gt;&gt; .config &lt;&lt;EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
</span></span></span><span class="line"><span class="cl"><span class="sd">          # 例如:
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          cat &gt;&gt; .config &lt;&lt;EOF
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_LUCI_LANG_en=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_LUCI_LANG_zh-cn=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-baidupcs-web=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-cifs-mount=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-wireguard=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-https-dns-proxy=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-netdata=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-p910nd=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-ssr-plus=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Hysteria=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSFORWARDER=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSPROXY=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-uugamebooster=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-app-syncdial=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
</span></span></span><span class="line"><span class="cl"><span class="sd">          # CONFIG_PACKAGE_luci-app-ttyd is not set
</span></span></span><span class="line"><span class="cl"><span class="sd">          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-theme-argon=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-theme-bootstrap=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-theme-material=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_luci-theme-netgear=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ddns-scripts_cloudflare.com-v4=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ddns-scripts_no-ip_com=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ddns-scripts_route53-v1=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_bind-dig=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_nano=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_qrencode=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_open-vm-tools=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_whois=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_nmap-ssl=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          CONFIG_PACKAGE_ipv6helper=y
</span></span></span><span class="line"><span class="cl"><span class="sd">          EOF
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          #
</span></span></span><span class="line"><span class="cl"><span class="sd">          # ===============================================================
</span></span></span><span class="line"><span class="cl"><span class="sd">          # 
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          sed -i &#39;s/^[ \t]*//g&#39; ./.config
</span></span></span><span class="line"><span class="cl"><span class="sd">          make defconfig</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Make download</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          make download -j8 || make download -j1 V=s
</span></span></span><span class="line"><span class="cl"><span class="sd">          rm -rf $(find ./dl/ -size -1024c)
</span></span></span><span class="line"><span class="cl"><span class="sd">          df -h</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Compile firmware</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          make -j$(nproc) || make -j1 V=s
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;=======================&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;Space usage:&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;=======================&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          df -h
</span></span></span><span class="line"><span class="cl"><span class="sd">          echo &#34;=======================&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">          du -h ./ --max-depth=1
</span></span></span><span class="line"><span class="cl"><span class="sd">          du -h /mnt/openwrt/ --max-depth=1 || true</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Prepare artifact</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          mkdir -p ./artifact/firmware
</span></span></span><span class="line"><span class="cl"><span class="sd">          mkdir -p ./artifact/package
</span></span></span><span class="line"><span class="cl"><span class="sd">          mkdir -p ./artifact/buildinfo
</span></span></span><span class="line"><span class="cl"><span class="sd">          rm -rf $(find ./bin/targets/ -type d -name &#34;packages&#34;)
</span></span></span><span class="line"><span class="cl"><span class="sd">          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
</span></span></span><span class="line"><span class="cl"><span class="sd">          cp -rf $(find ./bin/packages/ -type f -name &#34;*.ipk&#34;) ./artifact/package/
</span></span></span><span class="line"><span class="cl"><span class="sd">          cp -rf $(find ./bin/targets/ -type f -name &#34;*.buildinfo&#34; -o -name &#34;*.manifest&#34;) ./artifact/buildinfo/</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deliver buildinfo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/upload-artifact@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">OpenWrt_buildinfo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./artifact/buildinfo/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deliver package</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/upload-artifact@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">OpenWrt_package</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./artifact/package/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deliver firmware</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/upload-artifact@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">OpenWrt_firmware</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">./bin/targets/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Upload release asset</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">if</span><span class="p">:</span><span class="w"> </span><span class="l">github.event == &#39;release&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">svenstaro/upload-release-action@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">repo_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.YOURTOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">./artifact/firmware/*</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">${{ github.ref }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">file_glob</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span></code></pre></div><h2 id="如何手动开始编译不需要手动commit">如何手动开始编译，不需要手动commit</h2>
<ol>
<li>先更新你的OpenWrt源-&gt; <code>Fetch upstream</code> -&gt; <code>Fetch Merge</code></li>
<li>修改 <code>openwrt-ci.yml</code></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">master</span><span class="w">
</span></span></span></code></pre></div><p>改成</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">workflow_dispatch</span><span class="p">:</span><span class="w">
</span></span></span></code></pre></div><ol start="3">
<li>手动开始编译 <code>Action</code> -&gt; <code>OpenWrt-CI</code> -&gt; <code>Run workflow</code></li>
</ol>
<h2 id="添加ssr-plus">添加SSR PLUS</h2>
<p>我上面的配置已经添加了<a href="https://github.com/fw876/helloworld">这一段命令</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;src-git helloworld https://github.com/fw876/helloworld.git&#34;</span> &gt;&gt; <span class="s2">&#34;feeds.conf.default&#34;</span>
</span></span></code></pre></div>]]></content></item><item><title>一键安装 Sonarr Radarr Jackett 追剧一条龙</title><link>https://vicfree.com/2022/04/install-sonarr-radarr-jackett-with-docker-compose/</link><pubDate>Tue, 26 Apr 2022 00:18:41 +0800</pubDate><guid>https://vicfree.com/2022/04/install-sonarr-radarr-jackett-with-docker-compose/</guid><description>感谢原po, 我就基本照着抄就是了。 准备已安装 Docker, docker-compose 的服务器 偷懒下，安装教程引用Techno Tim + 官方教程，脚本复制粘贴完事。 开搞 按下面操作新建文</description><content type="html"><![CDATA[<p><a href="https://nubcakes.net/index.php/2019/04/03/how-to-install-sonarr-radarr-and-jackett-with-docker-compose/">感谢原po</a>, 我就基本照着抄就是了。</p>
<h2 id="准备已安装-docker-docker-compose-的服务器">准备已安装 Docker, docker-compose 的服务器</h2>
<p>偷懒下，安装教程引用<a href="https://docs.technotim.live/posts/docker-compose-install">Techno Tim</a> + <a href="https://docs.docker.com/engine/install/">官方教程</a>，脚本复制粘贴完事。</p>
<h2 id="开搞">开搞</h2>
<p>按下面操作新建文件夹</p>
<blockquote>
<p>接下来我会使用nano编辑器，你喜欢啥用啥。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir docker
</span></span><span class="line"><span class="cl">mkdir docker/radarr
</span></span><span class="line"><span class="cl">mkdir docker/sonarr
</span></span><span class="line"><span class="cl">mkdir docker/jackett
</span></span><span class="line"><span class="cl">mkdir docker/portainer
</span></span><span class="line"><span class="cl">mkdir downloads
</span></span><span class="line"><span class="cl">mkdir downloads/movies
</span></span><span class="line"><span class="cl">mkdir downloads/tv
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> docker
</span></span><span class="line"><span class="cl">touch docker-compose.yml
</span></span><span class="line"><span class="cl">nano docker-compose.yml
</span></span></code></pre></div><h4 id="docker-composeyml配置">docker-compose.yml配置</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">radarr</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">radarr</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">7878</span><span class="p">:</span><span class="m">7878</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/docker/radarr:/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads:/downloads</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads/movies:/movies</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">linuxserver/radarr</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">sonarr</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">sonarr</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">8989</span><span class="p">:</span><span class="m">8989</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/docker/sonarr:/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads:/downloads</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads/tv:/tv</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">linuxserver/sonarr</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">jackett</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">jackett</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">9117</span><span class="p">:</span><span class="m">9117</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/docker/jackett:/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/downloads:/downloads</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">linuxserver/jackett</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">portainer</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">portainer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">9000</span><span class="p">:</span><span class="m">9000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/var/run/docker.sock:/var/run/docker.sock</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/xxx/docker/portainer:/data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=Asia/Shanghai</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">portainer/portainer-ce</span><span class="w">
</span></span></span></code></pre></div><h2 id="映射nas-smb存储">映射NAS SMB存储</h2>
<p>因为我是虚拟机安装的，所以要映射下载盘</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">apt update
</span></span><span class="line"><span class="cl">apt install cifs-utils
</span></span></code></pre></div><p>使用下面命令挂载到 /home/xxx/downloads</p>
<pre tabindex="0"><code>sudo mount -t cifs -o uid=1000,gid=1000,username=xxx //192.168.xxx.xxx/xxx/downloads /home/xxx/downloads
</code></pre><p>如果你想开机自动挂载</p>
<pre tabindex="0"><code>nano /etc/fstab
</code></pre><p>粘贴以下内容</p>
<pre tabindex="0"><code>//192.168.xx.xx/xxx/downloads /home/xxx/downloads cifs username=xxx,password=xxx,uid=1000,gid=1000,noauto,x-systemd.automount,_netdev,vers=2.1 0 0
</code></pre><pre tabindex="0"><code>sudo mount -a
</code></pre><p>测试一下，一切正常就可以重启试试了</p>
<h2 id="软件如何使用">软件如何使用？</h2>
<p>太多了 自己看吧 <a href="https://wiki.servarr.com/">https://wiki.servarr.com/</a></p>
]]></content></item><item><title>traefik反向代理 https加密访问任何家用设备</title><link>https://vicfree.com/2022/04/use-traefik-https-everything/</link><pubDate>Mon, 25 Apr 2022 22:56:43 +0800</pubDate><guid>https://vicfree.com/2022/04/use-traefik-https-everything/</guid><description>好久没更新了，首发入手PS5，也没啥游戏值得玩的了，期待一下下个月的PS PLUS EXTRA，加钱升级，大方还是不如微软，但是毕竟微软是财大气粗且弱</description><content type="html"><![CDATA[<p>好久没更新了，首发入手PS5，也没啥游戏值得玩的了，期待一下下个月的PS PLUS EXTRA，加钱升级，大方还是不如微软，但是毕竟微软是财大气粗且弱势。</p>
<p>话说最近看到一个<a href="https://www.youtube.com/watch?v=liV3c9m_OX8">Techno Tim的视频</a>，讲到了traefik ssl everything, 我突然来劲了，家里网络已经很久没变化了，手痒了都，开搞。</p>
<p>众所周知，中国宽带网络是限制80,443端口的，导致视频中一些配置不符合我们的习惯，我会删除一些对我们多余的东西，比如https跳转，原教程 config.yml 中大量https跳转，但https跳转的前提是你得开http啊。</p>
<p>traefik 会自动更新 let&rsquo;s Encryt https证书，家用反向代理，自定义端口 custom port: 8443，这难道不诱人吗？</p>
<blockquote>
<p>如何有任何不明白可访问<a href="https://doc.traefik.io/traefik/getting-started/quick-start/">traefik官方Doc</a>，我自己也是看了官方资料才明白的很多的。</p>
</blockquote>
<h2 id="准备已安装-docker-docker-compose-的服务器">准备已安装 Docker, docker-compose 的服务器</h2>
<p>偷懒下，安装教程引用<a href="https://docs.technotim.live/posts/docker-compose-install">Techno Tim</a> + <a href="https://docs.docker.com/engine/install/">官方教程</a>，脚本复制粘贴完事。</p>
<h2 id="traefik-安装开始">traefik 安装开始</h2>
<p>准备项</p>
<ul>
<li>你的Cloudflare注册邮箱</li>
<li>去Cloudflare获取你的API Token，要求最低权限：All zones-Zone:Read, DNS:Edit，或者最高权限的API Key.</li>
<li>购买域名一个，并添加到Cloudflare里</li>
</ul>
<blockquote>
<p>还有其他域名提供商能够使用的<a href="https://doc.traefik.io/traefik/https/acme/">acme</a>，但不适合我们这类小白</p>
</blockquote>
<blockquote>
<p>traefik 管理页面理论上可以不加密码，但是你要发布到公网上，请一定要加密码（加密码请看配置中traefik-auth两项）</p>
</blockquote>
<p>按下面操作新建文件夹</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir traefik
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> traefik
</span></span><span class="line"><span class="cl">mkdir data
</span></span><span class="line"><span class="cl">touch data/acme.json
</span></span><span class="line"><span class="cl">chmod <span class="m">600</span> data/acme.json
</span></span><span class="line"><span class="cl">touch data/traefik.yml
</span></span><span class="line"><span class="cl">touch data/config.yml
</span></span><span class="line"><span class="cl">touch docker-compose.yml
</span></span><span class="line"><span class="cl">docker network create proxy
</span></span></code></pre></div><p>（可选）生成网页密码，填入到配置中</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt update
</span></span><span class="line"><span class="cl">sudo apt install apache2-utils
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="k">$(</span>htpasswd -nb admin 12345678<span class="k">)</span> <span class="p">|</span> sed -e s/<span class="se">\\</span>$/<span class="se">\\</span>$<span class="se">\\</span>$/g
</span></span></code></pre></div><p>接下来我会使用nano编辑器，你喜欢啥用啥。</p>
<h4 id="docker-composeyml配置">docker-compose.yml配置</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano docker-compose.yml
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">traefik</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">traefik:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">traefik</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">security_opt</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="kc">no</span>-<span class="l">new-privileges:true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">proxy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">8443</span><span class="p">:</span><span class="m">8443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">CF_API_EMAIL=XXX@XXX.com</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">CF_DNS_API_TOKEN=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># - CF_API_KEY=YOU_API_KEY</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># be sure to use the correct one depending on if you are using a token or key</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/etc/localtime:/etc/localtime:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/var/run/docker.sock:/var/run/docker.sock:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/XXX/traefik/data/traefik.yml:/traefik.yml:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/XXX/traefik/data/acme.json:/acme.json</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/home/XXX/traefik/data/config.yml:/config.yml:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.enable=true&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.middlewares.traefik-auth.basicauth.users=XXX:XXXXXXXXXXXXXX&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.entrypoints=https&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.rule=Host(`traefik.XXXX.com`)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.middlewares=traefik-auth&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.tls=true&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.tls.certresolver=cloudflare&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.tls.domains[0].main=XXXX.com&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.tls.domains[0].sans=*.XXXX.com&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s2">&#34;traefik.http.routers.traefik-secure.service=api@internal&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">proxy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">external</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span></code></pre></div><h4 id="traefikyml配置">traefik.yml配置</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano data/traefik.yml
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">api</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">dashboard</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">debug</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">https</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;:8443&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">serversTransport</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">insecureSkipVerify</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">providers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">docker</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">endpoint</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;unix:///var/run/docker.sock&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">exposedByDefault</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">file</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filename</span><span class="p">:</span><span class="w"> </span><span class="l">/config.yml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">certificatesResolvers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloudflare</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">acme</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">email</span><span class="p">:</span><span class="w"> </span><span class="l">XXX@XXX.com</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">storage</span><span class="p">:</span><span class="w"> </span><span class="l">acme.json</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">dnsChallenge</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">provider</span><span class="p">:</span><span class="w"> </span><span class="l">cloudflare</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">resolvers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;223.6.6.6:53&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="s2">&#34;119.29.29.29:53&#34;</span><span class="w">
</span></span></span></code></pre></div><h4 id="configyml其他设备配置">config.yml其他设备配置</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano data/config.yml
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">http</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="c">#region routers </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">routers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">jellyfin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;https&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rule</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Host(`jellyfin.XXXX.com`)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">middlewares</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default-headers</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">tls</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">jellyfin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">nextcloud</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">entryPoints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;https&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rule</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Host(`nextcloud.XXXX.com`)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">middlewares</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default-headers</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">tls</span><span class="p">:</span><span class="w"> </span>{}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">nextcloud</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#endregion</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#region services</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">jellyfin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">loadBalancer</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">servers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://192.168.xx.xx:8096&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">passHostHeader</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">nextcloud</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">loadBalancer</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">servers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;https://192.168.xx.xx:9443&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">passHostHeader</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default-headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">headers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">frameDeny</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">sslRedirect</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">browserXssFilter</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">contentTypeNosniff</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">forceSTSHeader</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">stsIncludeSubdomains</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">stsPreload</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">stsSeconds</span><span class="p">:</span><span class="w"> </span><span class="m">15552000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">customFrameOptionsValue</span><span class="p">:</span><span class="w"> </span><span class="l">SAMEORIGIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">customRequestHeaders</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">X-Forwarded-Proto</span><span class="p">:</span><span class="w"> </span><span class="l">https</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default-whitelist</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ipWhiteList</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">sourceRange</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;10.0.0.0/8&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;192.168.0.0/16&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;172.16.0.0/12&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secured</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">chain</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">middlewares</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default-whitelist</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">default-headers</span><span class="w">
</span></span></span></code></pre></div><h2 id="启动traefik">启动traefik</h2>
<blockquote>
<p>Warning!!! 由于本次使用的是dns来获取证书，请大家关闭openwrt防火墙中的自定义规则（劫持DNS至openwrt），因为有冲突。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker-compose up -d
</span></span></code></pre></div><blockquote>
<p>如何你之前配置配错了，修改配置后重新启动docker命令</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker-compose up -d --force-recreate
</span></span></code></pre></div><p>感兴趣的可以去看看原po，和我的区别，我已经帮大家把https改成8443，支持cloudflare隐藏你的IP(但速度慢)。
推荐大家准备两台 traefik，一台https://xxx.local.xxxx.com, 专门给内部网络访问 不开外部权限；另一台就是教程中https://xxx.xxx.com:8443.</p>
<h3 id="内部域名批量解析">内部域名批量解析</h3>
<p>且你是openwrt，使用下面配置</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano /etc/dnsmasq.conf
</span></span></code></pre></div><p>文件末尾填入</p>
<pre tabindex="0"><code>address=/.local.xxx.com/192.168.xx.xx
</code></pre><h2 id="外部部域名批量解析">外部部域名批量解析</h2>
<blockquote>
<p>记得开启路由器端口8443到你的docker服务器ip地址上
Cloudflare 新增域名解析到你的路由器DDNS上</p>
</blockquote>
<h3 id="安装portainer">安装Portainer</h3>
<p>看<a href="https://docs.technotim.live/posts/traefik-portainer-ssl/">原po吧</a></p>
<h3 id="新装的docker怎么加反代">新装的docker怎么加反代</h3>
<p>理论上新docker只要加上下面这段，都会自动加入到traefik清单里</p>
<pre tabindex="0"><code>    labels:
      - &#34;traefik.enable=true&#34;
      - &#34;traefik.http.routers.portainer-secure.entrypoints=https&#34;
      - &#34;traefik.http.routers.portainer-secure.rule=Host(`portainer.local.example.com`)&#34;
      - &#34;traefik.http.routers.portainer-secure.tls=true&#34;
      - &#34;traefik.http.routers.portainer-secure.service=portainer&#34;
      - &#34;traefik.http.services.portainer.loadbalancer.server.port=9000&#34;
      - &#34;traefik.docker.network=proxy&#34;
</code></pre>]]></content></item><item><title>为什么用OpenWrt</title><link>https://vicfree.com/2020/08/why-openwrt/</link><pubDate>Sun, 23 Aug 2020 16:15:38 +0800</pubDate><guid>https://vicfree.com/2020/08/why-openwrt/</guid><description>在谈OpenWrt之前，需要介绍下什么是OpenWrt，用人话来说就是：可替换路由器出厂系统的第三方系统，是用Linux做出来的，开源。 为什</description><content type="html"><![CDATA[<p>在谈OpenWrt之前，需要介绍下什么是<a href="https://zh.wikipedia.org/wiki/OpenWrt">OpenWrt</a>，用人话来说就是：可替换路由器出厂系统的第三方系统，是用<a href="https://zh.wikipedia.org/wiki/Linux">Linux</a>做出来的，开源。</p>
<p>为什么不用路由器出厂系统，你会问。那是因为出厂系统功能少，速度慢。网件Netgear是大厂中系统最慢的，修改任何设置都需要1-2分钟，而且还会断网。华硕Asus的快一点，但是依然达不到速度快的等级。TP-Link则是一朵奇葩，速度很快，但是功能少，大多数都是VxWork的系统，且都是低配，国外的TP-Link要好一点（毕竟国内还是低价跑量，不识货的居多）。</p>
<p>说说我的网络设备吧：</p>
<ol>
<li>目前使用Esxi架设了一个OpenWrt主路由，x86架构，方便系统升级和刷不死。因为Esxi可运行多个虚拟OpenWrt，可随意切换多个版本的OpenWrt。</li>
<li>两个刷了OpenWrt的无线路由，分别是AC867+AC1300，房间全覆盖AC 5GHz，两个路由都是支持802.11 kvr，可无限漫游，但是我只启用了802.11 kv， 802.11r 未启用。</li>
<li>所有无线路由都是使用LAN连接，无线路由使用了<a href="https://openwrt.org/docs/guide-user/network/wifi/dumbap">AP模式</a>，因为我每个房间都有2-4根网线。</li>
<li>入户光猫接2层管理型交换机，对WAN和LAN划分不同VLAN，可单线传输WAN+LAN，节省网线，且交换机每根网线都可以变成WAN，直连拨号。</li>
</ol>
<p>那么怎么刷机OpenWrt呢，这是一个很复杂的问题，欢迎去<a href="https://www.right.com.cn/forum/">恩山论坛</a>讨论此问题，或者去<a href="https://openwrt.org/toh/start">OpenWrt官方</a>。</p>
<p>官方OpenWrt缺少很多国人专用软件，推荐使用中国特供OpenWrt: <a href="https://github.com/coolsnowwolf/lede">https://github.com/coolsnowwolf/lede</a> ，你问为什么这个叫LEDE，这个是历史遗留问题：<code>OpenWrt另有一个复刻分支项目，名为LEDE，两者于2018年1月合并，合并后的项目使用OpenWrt的名字、LEDE的源代码。</code></p>
<p>上面的OpenWrt编译简单，且成功率高，软件齐全，编译前记得把 lede/feeds.conf.default 里的#src-git helloworld <a href="https://github.com/fw876/helloworld">https://github.com/fw876/helloworld</a> 前的 <code>#</code> 去除。</p>
]]></content></item><item><title>关于 PS5</title><link>https://vicfree.com/2020/04/about-ps5/</link><pubDate>Thu, 30 Apr 2020 18:49:43 +0800</pubDate><guid>https://vicfree.com/2020/04/about-ps5/</guid><description>Playstation 5 索尼在3月18日发布了一个原本在计划 GDCGame Developers Conference大会上演讲的视频，那个视频是讲给游戏开发者听的，内容非常的硬，还是需要我们翻</description><content type="html"><![CDATA[<h2 id="playstation-5">Playstation 5</h2>
<p>索尼在3月18日发布了一个原本在计划 GDC<code>Game Developers Conference</code>大会上演讲的视频，那个视频是讲给游戏开发者听的，内容非常的硬，还是需要我们翻译成人话。</p>
<p>演讲开始介绍了历代游戏主机的开发者熟悉周期，体现了这一次PS5开发工具对开发者很友好。</p>
<table>
<thead>
<tr>
<th style="text-align:center">PS1</th>
<th style="text-align:center">PS2</th>
<th style="text-align:center">PS3</th>
<th style="text-align:center">PS4</th>
<th style="text-align:center">PS5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1-2个月</td>
<td style="text-align:center">3-6个月</td>
<td style="text-align:center">6-12个月</td>
<td style="text-align:center">1-2个月</td>
<td style="text-align:center">小于1个月</td>
</tr>
</tbody>
</table>
<p>索尼也介绍了很多关于 PS5<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>软硬件的细节，但是很多信息都在传输中丢失了，或者歪曲了事实。</p>
<h2 id="ps5的超快-ssd">PS5的超快 SSD</h2>
<p>PS5 更快的 SSD 给予开发者自由，很多人都认为 PS5 这么快的SSD起不到作用，没有人会为了PS5这么快的SSD进行优化。</p>
<p>乍一看好像说的没错，但是你自己想想PC，为什么有人买三星980 Pro，因为它速度快啊，你见过有游戏会为三星980 Pro进行优化吗，速度快，使得游戏每个环节都会运行的快，程序员写的程序再差也能流畅运行。</p>
<p>并且每代主机寿命约6年，现在的每秒5.5GB/s，说不定5年后 SSD 每秒20GB/s，现在 SSD 成本虽然高，但是只是相较于HDD，和 Xbox SX 的2.4GB/s的SSD相比，价格差我猜每GB价格 PS5 是 XBox SX 的1.5倍。可能也是 PS5 内置825GB，Xbox SX内置1TB的原因。</p>
<p>PS5 内置了 PCIe 4x4  12通道825GB SSD，索尼当然可以加入更大 SSD，但是最终价格依然会转嫁到消费者，所以索尼认为825G是最合适的大小。但发布时会不会出更大SSD没有提到。</p>
<p>PS5支持外置 HDD 玩 PS4 游戏，PS5游戏不支持在外置 HDD 运行。</p>
<p>PS5支持外置PCIe 4x4 M.2 SSD，可以购买消费者级SSD，但推荐2020年底等待 PS5 兼容 SSD。
消费者级 M.2 SSD 只支持2个优先级，但是 PS5 内置SSD支持6个优先级，所以使用的M.2 SSD速度必须超过PS5内置SSD速度，以便PS5突然需要加载数据，假如是低速SSD此时会被其他数据传输占用，无法加载重要数据。</p>
<h2 id="定制-rdna2-gpu">定制 RDNA2 GPU</h2>
<p>假如你能看懂‘定制’是什么意思，就不会怀疑 PS5 使用的是 RDNA1 了。如果你怀疑 PS5 用的不是 RDNA2，你可以立即保存证据 <a href="https://www.youtube.com/watch?v=ph8LyNIT9sg">视频</a> <a href="https://blog.us.playstation.com/2020/03/18/unveiling-new-details-of-playstation-5-hardware-technical-specs/">博客</a>，等PS5上市，拿出上面的证据去告索尼欺诈，人越多，赔款越多，别我我没告诉你发财机会哦。</p>
<p>PS5 很多技术都是和 AMD 共同研发，假如 RDNA2 显卡上市了，包含了 PS5 GPU 某些功能，并不表示 PS5 抄的 AMD/PC 的作业。</p>
<p>PS5 支持向下 PS4 兼容，PS4 向下兼容是与 AMD 一起合作开发，但因为每个游戏都不一样，向下兼容也需要对应游戏做出相应的修改，如同每当一个新游戏出来，AMD/NV都会出一版优化特定游戏的驱动。</p>
<p>索尼已测试 PS4 按时间排序前100的游戏，几乎所有<code>Almost all of them</code>游戏都能 PS5 上市时运行。</p>
<p>PS5 支持光线追踪，个别游戏实现非常低的代价运行了以反射为基础的光线追踪。</p>
<p>PS5 支持 AMD SmartShift, PS5 的 CPU GPU 的功耗就是跷跷板，CPU 功耗增高，GPU 功耗就会降低，反之亦然。</p>
<p>Zen 2 CPU 3.5GHz, RDNA 2 GPU 2.23GHz<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>，并且 GPU 大部分时间都会保持或接近 2.23GHz 附近，通常降低10%功耗，只需要降低几个百分点的频率，所以 PS5 降频情况非常少。</p>
<h2 id="3d-音频">3D 音频</h2>
<p>画面虽然很重要，但是音频也比你想的要重要，PS5 使用 RDNA2 的 CU 进行改造，实现了类似 PS3 SPU的能力，Tempest Engine 让你用普通电视机扬声器也能有 3D 音效（当然带耳机更好），实现听声辩位。</p>
<p>其他更详细的介绍请看A9VG的专栏。<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></p>
<h2 id="手柄">手柄</h2>
<p>好不好看，见仁见智，但是手柄背面的图没有放出来，希望背面有惊喜<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>
<img src="https://live.staticflickr.com/65535/49747503557_566da5ebc8_3k.jpg" alt="img"></p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.playstation.com/en-us/explore/ps5/">https://www.playstation.com/en-us/explore/ps5/</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://blog.us.playstation.com/2020/03/18/unveiling-new-details-of-playstation-5-hardware-technical-specs/">https://blog.us.playstation.com/2020/03/18/unveiling-new-details-of-playstation-5-hardware-technical-specs/</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://www.a9vg.com/article/71038">https://www.a9vg.com/article/71038</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://blog.us.playstation.com/2020/04/07/introducing-dualsense-the-new-wireless-game-controller-for-playstation-5/">https://blog.us.playstation.com/2020/04/07/introducing-dualsense-the-new-wireless-game-controller-for-playstation-5/</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content></item><item><title>我喜欢的PS4游戏</title><link>https://vicfree.com/2020/02/my-favourite-ps4-games/</link><pubDate>Sat, 29 Feb 2020 23:50:47 +0800</pubDate><guid>https://vicfree.com/2020/02/my-favourite-ps4-games/</guid><description>PS4时代就要结束了，主机大约每隔6年左右就会换代，接任者PS5将在2020年底发售，而且PS5会有向下兼容，向下兼容这个事，索尼在PS4时</description><content type="html"><![CDATA[<p>PS4时代就要结束了，主机大约每隔6年左右就会换代，接任者PS5将在2020年底发售，而且PS5会有向下兼容，向下兼容这个事，索尼在PS4时代可做的真的不算好。PS5向下兼容理想情况是：PS5兼容PS1-PS4全家桶，但若只兼容PS4，要这样我就要唱衰PS5啦。话说今天都2月底了，新Xbox都差发布价格了，你看索尼嘴可真严实啊，这是想TM搞个大新闻吗。</p>
<p>说起我的游戏经历，我在PS4中期时才购买了PS4，在此之前一直是拿笔记本电脑玩的，很多学生都有类似的经历吧。我那是一台垃圾的i5-480M+GT540M，有啥不能玩的，降特效啊。15帧能玩，20帧流畅，那个时候真的玩了不少的游戏。</p>
<p>这个清单我只推荐我玩过的，我认为好玩的才会列出来，关于一个游戏好不好玩，我只能以自身的体验和经历做参考的，并不能代表所有人。</p>
<p>好开始吧</p>
<ul>
<li>Metal Gear Solid V: The Phantom Pain <a href="http://www.vgtime.com/game/201.jhtml">合金装逼/潜龙谍影</a></li>
</ul>
<blockquote>
<p>这个合金装逼5，前一小时其实我是拒绝的，因为我没有合金装备1-4的经历，完全一脸懵逼，但玩下去后发现，装逼装的真好，做起了合金人犯，游戏不注重手速与反应，手残也能玩出花样。</p>
</blockquote>
<ul>
<li>Life Is Strange <a href="http://www.vgtime.com/game/187.jhtml">奇异人生</a></li>
</ul>
<blockquote>
<p>主角MAX突然获得了时光倒流的能力，用这个能力在游戏中解决各种谜题。游戏结局也是非常棒，是的，我不管玩几次我都会选这个结局。记忆使人成为人，没有记忆人类啥都不是。
-Don&rsquo;t you forget about me&hellip;
-Never</p>
</blockquote>
<ul>
<li>Call of Duty 4: Modern Warfare <a href="http://www.vgtime.com/game/2354.jhtml">使命召唤4：现代战争</a></li>
</ul>
<blockquote>
<p>这个游戏有<code>Remastered</code>重制版了，在第一次玩到这游戏真的是惊了，第一次发现游戏的表现力还能这么精彩。画面、剧情和玩法，嗯，真的爽。</p>
</blockquote>
<ul>
<li>Call of Duty: Modern Warfare 2 <a href="http://www.vgtime.com/game/2589.jhtml">使命召唤：现代战争2</a></li>
</ul>
<blockquote>
<p>现代战争2是上一条的续作，都是一个团队做的，一样的棒。</p>
</blockquote>
<ul>
<li>BATMAN: ARKHAM KNIGHT <a href="http://www.vgtime.com/game/27.jhtml">蝙蝠侠 阿卡姆骑士</a></li>
</ul>
<blockquote>
<p>我为啥不提另两部的阿卡姆呢？因为画面，这一代的画面因为进入了PS4时代，画面提升巨大，能让你体验做蝙蝠侠的感觉，而且蝙蝠侠的游戏中演出真的很棒。<strong>谜语人，滚出哥谭。</strong></p>
</blockquote>
<ul>
<li>The Witcher 3: Wild Hunt <a href="http://www.vgtime.com/game/361.jhtml">猎魔人3 狂猎</a></li>
</ul>
<blockquote>
<p>习惯来说，应该叫巫师3，但是写出来就要严谨和装逼啦。体验杰洛特在猎魔人的世界闲逛冒险<del>打桩</del>的故事。买一送一，还送陶森特地图，蠢驴YES。</p>
</blockquote>
<ul>
<li>Titanfall 2 <a href="http://www.vgtime.com/game/3611.jhtml">泰坦天降2</a></li>
</ul>
<blockquote>
<p>还是出自COD 现代战争1/2的团队，虽然他们的经历很忐忑，但是游戏水平一直保持的很好，这个简直有点奇迹。想到好莱坞电影，第一部都是接近满分，第三部基本上就是烂片了。一部比一部好的，简直屈指可数，<code>Mad Max</code>疯狂麦克斯就是越拍越好的那个。</p>
</blockquote>
<ul>
<li>God of War <a href="http://www.vgtime.com/game/4310.jhtml">战神</a></li>
</ul>
<blockquote>
<p>战神3免费送了，我都玩不下去，就这个真的好玩，游戏设计很棒，手残也能打的下去，不劝退。缺点就是剧情太短，开个头。</p>
</blockquote>
<ul>
<li>What Remains of Edith Finch <a href="http://www.vgtime.com/game/546.jhtml">伊迪丝芬奇的记忆</a></li>
</ul>
<blockquote>
<p>这个游戏真的是艺术，简直太美太棒了。</p>
</blockquote>
<ul>
<li>Red Dead Redemption 2 <a href="http://www.vgtime.com/game/4446.jhtml">荒野大镖客 救赎2</a></li>
</ul>
<blockquote>
<p>说到这个游戏，玩法真的太追求真实，有点累。但是它营造了一个非常真实的世界，你可以全身心去体验这个世界。R星物理做的真的是第一，没话说。</p>
</blockquote>
<ul>
<li><del>赛博朋克2077 <a href="http://www.vgtime.com/game/73.jhtml">Cyberpunk 2077</a></del></li>
</ul>
<blockquote>
<p><del>虽然还没发售，但是我知道我会很喜欢它的。</del></p>
</blockquote>
<p>见识浅薄，只能写这么多了。</p>
]]></content></item><item><title>第一篇测试文章</title><link>https://vicfree.com/2020/02/my-first-post/</link><pubDate>Tue, 25 Feb 2020 19:26:13 +0800</pubDate><guid>https://vicfree.com/2020/02/my-first-post/</guid><description>Hello World! You MotherFucker! 国际惯例的标准hello world开始。</description><content type="html"><![CDATA[<p>Hello World!</p>
<p>You MotherFucker!</p>
<p>国际惯例的标准hello world开始。</p>
]]></content></item></channel></rss>